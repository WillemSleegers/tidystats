[{"path":"https://willemsleegers.github.io/tidystats/articles/custom-statistics.html","id":"example-1-using-the-class-argument","dir":"Articles","previous_headings":"","what":"Example 1: Using the class argument","title":"Custom statistics","text":"Say want calculate confidence intervals several parameters linear model, using confint() function. Unfortunately, get error: Error UseMethod(“tidy_stats”) : applicable method ‘tidy_stats’ applied object class “c(‘matrix’, ‘array’, ‘double’, ‘numeric’)” ’s confint() return standard matrix, rather object specific confint() function. can check running class() function output confint() (e.g., class(fit_confint)). ’ll see simply says \"matrix\" \"array\". ’s enough tidystats work . Ideally say something like \"confint\" tidystats knows working extract statistics. Thankfully, can still add statistics confint() list via add_stats(), using class argument. can specify statistics confint() function saying class = \"confint\". don’t get error time, indicating worked.","code":"# Run a linear model fit <- lm(100 / mpg ~ disp, data = mtcars)  # Compute the confidence intervals fit_confint <- confint(fit)  # Create an empty list statistics <- list()  # Add linear model and confidence intervals to the list statistics <- statistics %>%   add_stats(fit) %>%   add_stats(fit_confint) statistics <- statistics %>%   add_stats(fit) %>%   add_stats(fit_confint, class = \"confint\")"},{"path":"https://willemsleegers.github.io/tidystats/articles/custom-statistics.html","id":"example-2-using-custom_stats","dir":"Articles","previous_headings":"","what":"Example 2: Using custom_stats()","title":"Custom statistics","text":"Say want calculate Bayes Factor using BIC approach (Wagenmakers, 2007). example approach can found ; ’ll repeat . Bayes Factor 5.05. Now, add value tidystats list? try standard way, ’ll see fails. produces error message says: Error UseMethod(“tidy_stats”) : applicable method ‘tidy_stats’ applied object class “c(‘double’, ‘numeric’)” ’s BF_BIC simply number output statistics function, tidystats doesn’t know store number. Let’s fix using custom_stats() custom_stat(). Now don’t get error. Thanks custom_stats() custom_stat() correctly structured statistic can added list via add_stats().","code":"# Set seed for reproducibility set.seed(14)  # Simulate some data intercept_data <- data.frame(score = scale(rnorm(40), center = 0.72))  # Run two models and calculate the BIC full_lm <- lm(score ~ 1, intercept_data) null_lm <- lm(score ~ 0, intercept_data)  BF_BIC <- exp((BIC(null_lm) - BIC(full_lm)) / 2) # Load the tidystats package library(tidystats)  # Create an empty list statistics <- list()  # Add BIC to the list using add_stats() statistics <- add_stats(statistics, BF_BIC) # Create a list of custom statistics BIC <- custom_stats(   method = \"BIC\",   statistics = custom_stat(     name = \"BIC Bayes Factor\",     value = BF_BIC,     symbol = \"BF\",     subscript = \"10\"   ) )  # Add the statistics to the list statistics <- add_stats(statistics, BIC)"},{"path":"https://willemsleegers.github.io/tidystats/articles/custom-statistics.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Custom statistics","text":"tidystats works taking output statistical tests, extracting statistics, reorganizing particular structure. works 1) tidystats built-support function 2) function used run statistical test returns object tidystats can use identify test. want use tidystats function supported yet, please contact let know add support . Alternatively, can manually create list statistics supply add_stats() function using custom_stats() custom_stat(). goal tidystats support many tests possible, rarely resort solution.","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/introduction-to-tidystats.html","id":"why-use-tidystats","dir":"Articles","previous_headings":"","what":"Why use tidystats?","title":"Introduction to tidystats","text":"tidystats package designed address two problems common scientific research: incomplete incorrect statistics reporting. problem incomplete statistics reporting likely stems fundamental trade-comprehensively reporting statistics one hand providing clear, easy--read, text . Word limits don’t help either. problem incorrect statistics reporting likely caused manually copy-pasting statistical output output window text editor. tidystats addresses two problems enabling researchers combine statistics statistical analyses single file, can shared others used report statistics using text editor add-.","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/introduction-to-tidystats.html","id":"how-to-use-tidystats","dir":"Articles","previous_headings":"","what":"How to use tidystats?","title":"Introduction to tidystats","text":"tidystats designed easily fit data analysis workflow. fact, tidystats can simply tacked end data analysis session, assuming stored results statistical function variable. example, create regression model using lm() function, often store result analysis variable: storing output statistical functions variable, can use add_stats() function tidystats extract statistics add list. statistics gathered together, save .json file using write_stats() function. .json file can read text editor add-report statistics, shared others read R extract statistics (e.g., meta-analyses).","code":"model <- lm(extra ~ group, data = sleep)"},{"path":"https://willemsleegers.github.io/tidystats/articles/introduction-to-tidystats.html","id":"an-example","dir":"Articles","previous_headings":"","what":"An example","title":"Introduction to tidystats","text":"follows example several analyses conducted quote_source data contained within tidystats package. data large-scaled replication Lorge & Curtiss (1936). details can found paper replication effort (Klein et al., 2014). short, participants saw following quote: “sworn live free, even find bitter taste death.” quote attributed either George Washington, liked individual, Osama Bin Laden, disliked individual. Participants asked extent agree quote, 9-point Likert scale ranging 1 (disagreement) 9 (agreement). start bit setup. main hypothesis people like quote attributed George Washington compared Osama Bin Laden. test hypothesis conducting t-test. Participants appear rate quote bit positively attributed George Washington. can also perform additional tests. instance, matter participant US? age matter? answer questions, can perform interaction tests using lm(). Let’s start interaction source whether participant U.S. . interaction significant, appears matter whether participant U.S. . fact, participants U.S. show stronger effect outside U.S. interaction source participant’s age? significant interaction effect, evidence age changing size effect. Let’s say analyses want save output report later. tidystats comes . steps perform first create empty list use add_stats() function add statistics list. stored analysis variable. add_stats() function takes analysis, extracts statistics, adds result list. Optionally, can add additional information analysis, whether preregistered, whether primary, secondary, exploratory analysis, simply add notes. can see added quite information first second analysis. add documentation analysis conducted. might particularly helpful others import file use meta-research (e.g., performing meta-analysis p-curve analysis). save analyses file, use write_stats() function. Note file extension: .json. types files simply text files, format machine-readable (unfortunately, human-readable). file can used share others can read back R extract statistics (e.g., meta-analyses) report statistics text editor.","code":"library(tidystats)  data <- quote_source t_test <- t.test(response ~ source, data = data) t_test ##  ##  Welch Two Sample t-test ##  ## data:  response by source ## t = -12.801, df = 6322.7, p-value < 2.2e-16 ## alternative hypothesis: true difference in means between group Bin Laden and group Washington is not equal to 0 ## 95 percent confidence interval: ##  -0.8017441 -0.5888010 ## sample estimates: ##  mean in group Bin Laden mean in group Washington  ##                 5.232241                 5.927514 lm_us_or_not <- lm(response ~ source * us_or_international, data = data) summary(lm_us_or_not) ##  ## Call: ## lm(formula = response ~ source * us_or_international, data = data) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -5.0047 -1.2278 -0.2278  1.7722  3.7722  ##  ## Coefficients: ##                                        Estimate Std. Error t value Pr(>|t|)     ## (Intercept)                             5.24884    0.08489  61.832  < 2e-16 *** ## sourceWashington                        0.40522    0.11720   3.457 0.000549 *** ## us_or_internationalUS                  -0.02101    0.09550  -0.220 0.825891     ## sourceWashington:us_or_internationalUS  0.37169    0.13227   2.810 0.004966 **  ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 2.159 on 6321 degrees of freedom ##   (18 observations deleted due to missingness) ## Multiple R-squared:  0.02748,    Adjusted R-squared:  0.02701  ## F-statistic: 59.53 on 3 and 6321 DF,  p-value: < 2.2e-16 lm_age <- lm(response ~ source * age, data = data) summary(lm_age) ##  ## Call: ## lm(formula = response ~ source * age, data = data) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -5.7433 -1.2018 -0.1516  1.7928  3.8828  ##  ## Coefficients: ##                      Estimate Std. Error t value Pr(>|t|)     ## (Intercept)          4.933702   0.095891  51.451  < 2e-16 *** ## sourceWashington     0.557365   0.135579   4.111 3.99e-05 *** ## age                  0.011470   0.003361   3.412 0.000648 *** ## sourceWashington:age 0.005453   0.004783   1.140 0.254328     ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 2.156 on 6308 degrees of freedom ##   (31 observations deleted due to missingness) ## Multiple R-squared:  0.03085,    Adjusted R-squared:  0.03038  ## F-statistic: 66.92 on 3 and 6308 DF,  p-value: < 2.2e-16 # Create an empty list to store the analyses in statistics <- list()  # Add the analyses statistics <- statistics |>   add_stats(     t_test,     preregistered = TRUE, type = \"primary\",     notes = \"A t-test comparing the effect of source on the quote rating.\"   ) |>   add_stats(     lm_us_or_not,     preregistered = FALSE, type = \"exploratory\",     notes = \"Interaction effect with being from the U.S. or not.\"   ) |>   add_stats(lm_age) write_stats(statistics, \"lorge-curtiss-1936-replication.json\")"},{"path":"https://willemsleegers.github.io/tidystats/articles/introduction-to-tidystats.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to tidystats","text":"Lorge, ., & Curtiss, C. C. (1936). Prestige, suggestion, attitudes. Journal Social Psychology, 7, 386-402. https://doi.org/10.1080/00224545.1936.9919891 Klein, R.. et al. (2014) Investigating Variation Replicability: “Many Labs” Replication Project. Social Psychology, 45(3), 142-152. https://dx.doi.org/10.1027/1864-9335/a000178","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/reusing-statistics.html","id":"an-example","dir":"Articles","previous_headings":"","what":"An example","title":"Reusing statistics","text":"example convert list statistics data frame perform several simple operations. example read tidystats list select p-values. Alternatively, can can also easily select significant p-values. useful want conduct p-curve analysis. Although note blindly select p-values. select p-values relevant particular hypothesis. researchers provide correct meta-information test (e.g., indicating whether primary analysis), help meta-researchers make correct decisions statistics include analyses.","code":"library(tidystats) library(dplyr)  # Read the .json file containing the statistics and immediately convert it to # a data frame statistics <- read_stats(\"statistics.json\") |>   tidy_stats_to_data_frame()  # Extract all the p-values p_values <- filter(statistics, statistic_name == \"p\")  p_values sig_p_values <- filter(statistics, statistic_name == \"p\" & value < .05)"},{"path":"https://willemsleegers.github.io/tidystats/articles/reusing-statistics.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Reusing statistics","text":"importing tidystats-produced file statistics, can convert statistics data frame using tidy_stats_to_data_frame function apply common data transformation functions extract specific statistics. statistics can used analyses meta-analyses, p-curve analyses, analyses.","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/reusing-statistics.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Reusing statistics","text":"Simonsohn, U., Nelson, L. D., & Simmons, J. P. (2014). p-curve effect size: Correcting publication bias using significant results. Perspectives Psychological Science, 9(6), 666-681. https://doi.org/10.1177/1745691614553988","code":""},{"path":[]},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"afex","dir":"Articles","previous_headings":"Packages and supported functions","what":"afex","title":"Supported functions","text":"aov_ez() aov_car() aov_4() mixed()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"bayesfactor","dir":"Articles","previous_headings":"Packages and supported functions","what":"BayesFactor","title":"Supported functions","text":"generalTestBF() lmBF() regressionBF() ttestBF() anovaBF() correlationBF() contingencyTableBF() proportionBF() meta.ttestBF()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"effectsize","dir":"Articles","previous_headings":"Packages and supported functions","what":"effectsize","title":"Supported functions","text":"cohens_d() hedges_g() glass_delta()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"effsize","dir":"Articles","previous_headings":"Packages and supported functions","what":"effsize","title":"Supported functions","text":"cohen.d() VD.() cliff.delta()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"emmeans","dir":"Articles","previous_headings":"Packages and supported functions","what":"emmeans","title":"Supported functions","text":"emmeans() contrast() test() mvcontrast() eff_size() emtrends() joint_tests() ref_grid()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"hmisc","dir":"Articles","previous_headings":"Packages and supported functions","what":"Hmisc","title":"Supported functions","text":"rcorr()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"irr","dir":"Articles","previous_headings":"Packages and supported functions","what":"irr","title":"Supported functions","text":"icc()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"lme4","dir":"Articles","previous_headings":"Packages and supported functions","what":"lme4","title":"Supported functions","text":"lmer() anova()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"lmertest","dir":"Articles","previous_headings":"Packages and supported functions","what":"lmerTest","title":"Supported functions","text":"lmer() anova()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"tidystats","dir":"Articles","previous_headings":"Packages and supported functions","what":"tidystats","title":"Supported functions","text":"count_data() describe_data()","code":""},{"path":"https://willemsleegers.github.io/tidystats/articles/supported-functions.html","id":"stats","dir":"Articles","previous_headings":"Packages and supported functions","what":"stats","title":"Supported functions","text":"anova() ansari.test() aov() bartlett.test() binom.test() Box.test() chisq.test() confint() cor.test() fisher.test() fligner.test() friedman.test() glm() kruskal.test() ks.test() lm() mantelhaen.test() mauchly.test() mcnemar.test() mood.test() oneway.test() pairwise.t.test() pairwise.prop.test() pairwise.wilcox.test() poisson.test() PP.test() prop.test() prop.trend.test() quade.test() shapiro.test() t.test() var.test() wilcox.test()","code":""},{"path":"https://willemsleegers.github.io/tidystats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Willem Sleegers. Maintainer.","code":""},{"path":"https://willemsleegers.github.io/tidystats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sleegers WWA (2024). tidystats: Save output statistical tests. doi:10.5281/zenodo.4041858, https://zenodo.org/doi/10.5281/zenodo.4041858.","code":"@Manual{,   title = {tidystats: Save output of statistical tests},   author = {Willem W. A. Sleegers},   year = {2024},   doi = {10.5281/zenodo.4041858},   url = {https://zenodo.org/doi/10.5281/zenodo.4041858}, }"},{"path":"https://willemsleegers.github.io/tidystats/index.html","id":"tidystats","dir":"","previous_headings":"","what":"Save Output of Statistical Tests","title":"Save Output of Statistical Tests","text":"Author: Willem Sleegers License: MIT tidystats R package sharing reporting statistics. tidystats extracts statistics output statistical functions (e.g., t.test(), lm()) stores structured format. resulting file can shared others used popular text editors reproducibly report statistics. Please see instructions install use package. note package currently development. means package may contain bugs subject significant changes. find bugs feedback, please let know creating issue Github.","code":""},{"path":"https://willemsleegers.github.io/tidystats/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Save Output of Statistical Tests","text":"tidystats can installed CRAN. can also install development version GitHub using remotes package.","code":"install.packages(\"tidystats\") remotes::install_github(\"willemsleegers/tidystats\")"},{"path":"https://willemsleegers.github.io/tidystats/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Save Output of Statistical Tests","text":"main function add_stats(). function 2 necessary arguments: list: list want add statistics . output: output statistics function (e.g., output t.test() lm()) also need identifier uniquely identify output statistics function. can provide identifier (e.g., ‘weight_height_correlation’) identifier argument. provide identifer, one automatically created . Optionally, can also specify additional meta-information: type: type specifies analysis primary, secondary, exploratory. preregistered: Whether analysis preregistered . notes: Additional information think useful record. statistics added list, can write contents file using write_stats() function.","code":""},{"path":"https://willemsleegers.github.io/tidystats/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Save Output of Statistical Tests","text":"following example shows combine save statistics three different statistical tests. result .json file contains statistics three statistical tests. want see file looks like, can inspect . fully worked example, see vignette(\"introduction--tidystats\").","code":"# Conduct a t-test, regression, and an ANOVA sleep_wide <- reshape(   sleep,   direction = \"wide\",   idvar = \"ID\",   timevar = \"group\",   sep = \"_\" ) sleep_test <- t.test(sleep_wide$extra_1, sleep_wide$extra_2, paired = TRUE)  ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14) trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69) group <- gl(2, 10, 20, labels = c(\"Ctl\", \"Trt\")) weight <- c(ctl, trt) lm_D9 <- lm(weight ~ group)  npk_aov <- aov(yield ~ block + N * P * K, npk)  # Create an empty list to add the statistics to statistics <- list()  # Add the statistics and specify some meta-information statistics <- statistics |>   add_stats(sleep_test, type = \"primary\") |>   add_stats(lm_D9, preregistered = TRUE) |>   add_stats(npk_aov, notes = \"An ANOVA example\")  # Save the statistics to a file write_stats(statistics, \"statistics.json\")"},{"path":"https://willemsleegers.github.io/tidystats/index.html","id":"supported-statistical-functions","dir":"","previous_headings":"","what":"Supported statistical functions","title":"Save Output of Statistical Tests","text":"tidystats supports functions several statistics-related packages, including stats, lme4, BayesFactor, emmeans, others. full list supported packages functions, see vignette(\"supported-functions\"). cases need provide class add_stats() function order tidystats correctly extract statistics. can see list functions require class argument documentation add_stats() function (?add_stats). want use tidystats unsupported function, two things can : Request support new function creating issue. Manually extract statistics add via add_stats() using custom_stats() function. See vignette(\"custom-statistics\") information.","code":""},{"path":"https://willemsleegers.github.io/tidystats/index.html","id":"reporting-statistics","dir":"","previous_headings":"","what":"Reporting statistics","title":"Save Output of Statistical Tests","text":"file created write_stats() function can used several text editor add-ins reproducibly report statistics. information add-ins, please see tidystats website GitHub pages: Microsoft Word add-Google Docs add-","code":""},{"path":"https://willemsleegers.github.io/tidystats/index.html","id":"more-information","dir":"","previous_headings":"","what":"More information","title":"Save Output of Statistical Tests","text":"See tidystats website information, FAQ, tips tricks, well receive (give) support. questions comments, feel free create issue GitHub see website ways contact .","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/add_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Add statistical output to a tidystats list — add_stats","title":"Add statistical output to a tidystats list — add_stats","text":"add_stats() used add output statistical test tidystats list.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/add_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add statistical output to a tidystats list — add_stats","text":"","code":"add_stats(   list,   output,   identifier = NULL,   type = NULL,   preregistered = NULL,   notes = NULL,   args = NULL,   class = NULL )"},{"path":"https://willemsleegers.github.io/tidystats/reference/add_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add statistical output to a tidystats list — add_stats","text":"list tidystats list. output Output statistical test. identifier string identifying model. Automatically created provided. type string specifying type analysis: primary, secondary, exploratory. preregistered boolean specifying whether analysis preregistered . notes string specifying additional information. args list additional arguments customize statistics extracted. See 'Details' list supported functions arguments. class string manually specify class object tidystats knows extract statistics. See 'Details' list classes supported.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/add_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add statistical output to a tidystats list — add_stats","text":"Many functions perform statistical tests (e.g., t.test(), lm()) return object containing statistics. objects can stored variables used add_stats() extract statistics add list. list can saved file using write_stats() function. list supported functions, see vignette(\"supported-functions\", package = \"tidystats\").","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/add_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add statistical output to a tidystats list — add_stats","text":"","code":"# Conduct analyses sleep_wide <- reshape(   sleep,   direction = \"wide\",   idvar = \"ID\",   timevar = \"group\",   sep = \"_\" ) sleep_test <- t.test(sleep_wide$extra_1, sleep_wide$extra_2, paired = TRUE)  ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14) trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69) group <- gl(2, 10, 20, labels = c(\"Ctl\", \"Trt\")) weight <- c(ctl, trt) lm_D9 <- lm(weight ~ group) lm_D9_confint <- confint(lm_D9)  npk_aov <- aov(yield ~ block + N * P * K, npk)  # Create an empty list to store the statistics in statistics <- list()  # Add statistics to the list statistics <- statistics |>   add_stats(sleep_test, type = \"primary\", preregistered = TRUE) |>   add_stats(lm_D9) |>   add_stats(lm_D9_confint, class = \"confint\") |>   add_stats(npk_aov, notes = \"An ANOVA example\")"},{"path":"https://willemsleegers.github.io/tidystats/reference/count_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of observations — count_data","title":"Count the number of observations — count_data","text":"count_data() returns number proportion observations categorical variables.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/count_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of observations — count_data","text":"","code":"count_data(data, ..., na.rm = FALSE, pct = FALSE)"},{"path":"https://willemsleegers.github.io/tidystats/reference/count_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of observations — count_data","text":"data data frame. ... One unquoted (categorical) column names data frame, separated commas. na.rm boolean specifying whether missing values (including NaN) removed. pct boolean indicating whether calculate percentages instead proportions. default FALSE.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/count_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count the number of observations — count_data","text":"data frame can grouped using dplyr::group_by() number observations calculated within group level.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/count_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of observations — count_data","text":"","code":"count_data(quote_source, source) #> # A tibble: 2 × 3 #>   source         n  prop #>   <chr>      <int> <dbl> #> 1 Bin Laden   3101 0.489 #> 2 Washington  3242 0.511 count_data(quote_source, source, sex) #> # A tibble: 6 × 4 #>   source     sex        n     prop #>   <chr>      <chr>  <int>    <dbl> #> 1 Bin Laden  female  2067 0.326    #> 2 Bin Laden  male    1029 0.162    #> 3 Bin Laden  NA         5 0.000788 #> 4 Washington female  2206 0.348    #> 5 Washington male    1031 0.163    #> 6 Washington NA         5 0.000788 count_data(quote_source, source, sex, na.rm = TRUE) #> # A tibble: 4 × 4 #>   source     sex        n  prop #>   <chr>      <chr>  <int> <dbl> #> 1 Bin Laden  female  2067 0.326 #> 2 Bin Laden  male    1029 0.162 #> 3 Washington female  2206 0.348 #> 4 Washington male    1031 0.163 count_data(quote_source, source, sex, na.rm = TRUE, pct = TRUE) #> # A tibble: 4 × 4 #>   source     sex        n   pct #>   <chr>      <chr>  <int> <dbl> #> 1 Bin Laden  female  2067  32.6 #> 2 Bin Laden  male    1029  16.2 #> 3 Washington female  2206  34.8 #> 4 Washington male    1031  16.3  # Use dplyr::group_by() to calculate proportions within a group quote_source |>   dplyr::group_by(source) |>   count_data(sex) #> # A tibble: 6 × 4 #> # Groups:   source [2] #>   source     sex        n    prop #>   <chr>      <chr>  <int>   <dbl> #> 1 Bin Laden  female  2067 0.667   #> 2 Bin Laden  male    1029 0.332   #> 3 Bin Laden  NA         5 0.00161 #> 4 Washington female  2206 0.680   #> 5 Washington male    1031 0.318   #> 6 Washington NA         5 0.00154"},{"path":"https://willemsleegers.github.io/tidystats/reference/custom_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom statistic — custom_stat","title":"Create a custom statistic — custom_stat","text":"custom_stat() used together custom_stats() function add statistics unsupported functions via add_stats(). See custom_stats() function information.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/custom_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom statistic — custom_stat","text":"","code":"custom_stat(   name,   value,   symbol = NULL,   subscript = NULL,   interval = NULL,   level = NULL,   lower = NULL,   upper = NULL )"},{"path":"https://willemsleegers.github.io/tidystats/reference/custom_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom statistic — custom_stat","text":"name string specifying name statistic. value numeric value statistic. symbol string specifying symbol statistic use reporting statistic. subscript string specifying subscript use reporting statistic. interval string specifying type interval statistic ranged statistic (e.g., 95% confidence interval) level numeric value 0 1 indicating level interval. lower numeric value lower bound statistic. upper numeric value upper bound statistic.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/custom_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom statistic — custom_stat","text":"","code":"# Example 1: A single mean value sample <- rnorm(1000, mean = 0, sd = 1) mean <- mean(sample)  custom_stat(name = \"mean\", value = mean, symbol = \"M\") #> [[1]] #> $name #> [1] \"mean\" #>  #> $value #> [1] 0.004339615 #>  #> $symbol #> [1] \"M\" #>  #> attr(,\"class\") #> [1] \"tidystats\" \"list\"      #>   # Example 2: A mean with a 95% confidence interval sample <- rnorm(1000, mean = 0, sd = 1) mean <- mean(sample) se <- sd(sample) / sqrt(length(sample)) CI <- c(mean - 1.96 * se, mean + 1.96 * se)  custom_stat(   name = \"mean\",   value = mean,   symbol = \"M\",   interval = \"CI\",   level = .95,   lower = CI[1],   upper = CI[2] ) #> [[1]] #> $name #> [1] \"mean\" #>  #> $value #> [1] -0.01626336 #>  #> $symbol #> [1] \"M\" #>  #> $interval #> [1] \"CI\" #>  #> $level #> [1] 0.95 #>  #> $lower #> [1] -0.07622307 #>  #> $upper #> [1] 0.04369634 #>  #> attr(,\"class\") #> [1] \"tidystats\" \"list\"      #>"},{"path":"https://willemsleegers.github.io/tidystats/reference/custom_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a collection of custom statistics — custom_stats","title":"Create a collection of custom statistics — custom_stats","text":"custom_stats() used create collection statistics unsupported functions add list via add_stats().","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/custom_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a collection of custom statistics — custom_stats","text":"","code":"custom_stats(method, statistics)"},{"path":"https://willemsleegers.github.io/tidystats/reference/custom_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a collection of custom statistics — custom_stats","text":"method string specifying method used obtain statistics. statistics vector statistics created custom_stat().","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/custom_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a collection of custom statistics — custom_stats","text":"custom_stats() supports adding single statistic group statistics. Multiple groups statistics (yet) supported.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/custom_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a collection of custom statistics — custom_stats","text":"","code":"# Example: BIC Bayes factor (approx.) # Run the analysis lm1 <- lm(Fertility ~ ., data = swiss) lm2 <- update(lm1, . ~ . - Examination)  BF10 <- 1 / exp((BIC(lm2) - BIC(lm1)) / 2)  # Create the custom statistics BIC_BFs <- custom_stats(   method = \"BIC Bayes factor\",   statistics = c(     custom_stat(name = \"BF\", value = BF10, subscript = \"10\"),     custom_stat(name = \"BF\", value = 1 / BF10, subscript = \"01\")   ) )  # Create an empty list statistics <- list()  # Add the custom statistics to the list statistics <- add_stats(statistics, BIC_BFs)"},{"path":"https://willemsleegers.github.io/tidystats/reference/describe_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate common descriptive statistics — describe_data","title":"Calculate common descriptive statistics — describe_data","text":"describe_data() returns set common descriptive statistics (e.g., number observations, mean, standard deviation) one numeric variables.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/describe_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate common descriptive statistics — describe_data","text":"","code":"describe_data(data, ..., na.rm = TRUE, short = FALSE)"},{"path":"https://willemsleegers.github.io/tidystats/reference/describe_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate common descriptive statistics — describe_data","text":"data data frame. ... One unquoted column names data frame. na.rm boolean indicating whether missing values (including NaN) excluded calculating descriptives? default TRUE. short boolean indicating whether subset descriptives reported? set TRUE``, N, M, SD returned. default FALSE`.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/describe_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate common descriptive statistics — describe_data","text":"data can grouped using dplyr::group_by() descriptives calculated group level. Skew kurtosis based datawizard::skewness() datawizard::kurtosis() functions (Komsta & Novomestky, 2015).","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/describe_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate common descriptive statistics — describe_data","text":"","code":"describe_data(quote_source, response) #> # A tibble: 1 × 13 #>   var     missing     N     M    SD     SE   min   max range median  mode   skew #>   <chr>     <int> <int> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl>  <dbl> #> 1 respon…      18  6325  5.59  2.19 0.0275     1     9     8      5     5 -0.137 #> # ℹ 1 more variable: kurtosis <dbl>  describe_data(quote_source, response, na.rm = FALSE) #> # A tibble: 1 × 13 #>   var      missing     N     M    SD    SE   min   max range median  mode  skew #>   <chr>      <int> <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> #> 1 response      18  6325    NA    NA    NA    NA    NA    NA     NA     5    NA #> # ℹ 1 more variable: kurtosis <dbl>  quote_source |>   dplyr::group_by(source) |>   describe_data(response) #> # A tibble: 2 × 14 #> # Groups:   source [2] #>   var     source missing     N     M    SD     SE   min   max range median  mode #>   <chr>   <chr>    <int> <int> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> #> 1 respon… Bin L…      18  3083  5.23  2.11 0.0380     1     9     8      5     5 #> 2 respon… Washi…       0  3242  5.93  2.21 0.0388     1     9     8      6     5 #> # ℹ 2 more variables: skew <dbl>, kurtosis <dbl>  quote_source |>   dplyr::group_by(source) |>   describe_data(response, short = TRUE) #> # A tibble: 2 × 5 #> # Groups:   source [2] #>   var      source         N     M    SD #>   <chr>    <chr>      <int> <dbl> <dbl> #> 1 response Bin Laden   3083  5.23  2.11 #> 2 response Washington  3242  5.93  2.21"},{"path":"https://willemsleegers.github.io/tidystats/reference/helper_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions in tidystats — tidy_matrix","title":"Helper functions in tidystats — tidy_matrix","text":"Functions used hood tidystats package.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/helper_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions in tidystats — tidy_matrix","text":"","code":"tidy_matrix(m, symmetric = TRUE)  add_statistic(   list,   name,   value,   symbol = NULL,   subscript = NULL,   interval = NULL,   level = NULL,   lower = NULL,   upper = NULL )  symbol(   x = c(\"alpha\", \"chi_squared\", \"delta\", \"guttmans_lambda\", \"K_squared\", \"lambda\",     \"p_hat\", \"R_squared\", \"sigma\", \"t_squared\", \"tau\") )  expect_equal_models(model, expected_tidy_model, tolerance = 0.001)  write_test_stats(x, path, digits = 6)"},{"path":"https://willemsleegers.github.io/tidystats/reference/helper_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions in tidystats — tidy_matrix","text":"m matrix.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/helper_functions.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Helper functions in tidystats — tidy_matrix","text":"tidy_matrix(): Function convert matrix objects tidy data frame. add_statistic(): Function add statistic list. helps create list ignores NULL values. symbol(): Function return symbols ASCII. expect_equal_models(): Function compare tidied models testing. write_test_stats(): Function save tidied statistics file. Since files used testing, important store files correctly tidied statistics, hence prompt.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/quote_source.html","id":null,"dir":"Reference","previous_headings":"","what":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"Data multiple studies Many Labs project (Klein et al., 2014) replicating Lorge & Curtiss (1936).","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/quote_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"","code":"quote_source"},{"path":"https://willemsleegers.github.io/tidystats/reference/quote_source.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"data frame 6343 rows 15 columns: ID participant number source attributed source quote: Washington Bin Laden response evaluation quote 9-point Likert scale, 1 indicating disagreement 9 indicating agreement age participant's age sex participant's sex citizenship participant's citizenship race participant's race major participant's major native_language participant's native language referrer location study conducted compensation participant compensated participation recruitment participant recruited separation description study administered terms participant isolation us_or_international whether study conducted US outside US (international) lab_or_online whether study conducted lab online","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/quote_source.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"Lorge Curtiss (1936) examined quotation perceived attributed liked disliked individual. quotation interest : \"hold little rebellion, now , good thing, necessary political world storms physical world.\" one condition quotation attributed Thomas Jefferson, liked individual, condition attributed Vladimir Lenin, disliked individual. agreement observed quotation attributed Jefferson Lenin. replication studies, quotation : \"sworn live free, even find bitter taste death.\" quotation attributed either George Washington, liked individual, Osama Bin Laden, disliked individual.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/quote_source.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"Lorge, ., & Curtiss, C. C. (1936). Prestige, suggestion, attitudes. Journal Social Psychology, 7, 386-402. doi:10.1080/00224545.1936.9919891 Klein, R.. et al. (2014) Investigating Variation Replicability: \"Many Labs\" Replication Project. Social Psychology, 45(3), 142-152. doi:10.1027/1864-9335/a000178","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/read_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a .json file that was produced with write_stats() — read_stats","title":"Read a .json file that was produced with write_stats() — read_stats","text":"read_stats() can read .json file containing statistics produced using tidystats. returns list containing statistics, identifier name list element.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/read_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a .json file that was produced with write_stats() — read_stats","text":"","code":"read_stats(file)"},{"path":"https://willemsleegers.github.io/tidystats/reference/read_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a .json file that was produced with write_stats() — read_stats","text":"file string specifying path tidystats data file.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/read_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a .json file that was produced with write_stats() — read_stats","text":"","code":"# A simple example, assuming there is a file called 'statistics.json' if (FALSE) { # \\dontrun{ statistics <- read_stats(\"statistics.json\") } # }  # A working example statistics <- read_stats(   file = system.file(\"statistics.json\", package = \"tidystats\") )"},{"path":"https://willemsleegers.github.io/tidystats/reference/tidy_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"tidy_stats used convert output statistical object list organized statistics. tidy_stats function automatically run add_stats used, generally need use function explicitly. can used, however, peek output specific analysis organized.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/tidy_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"","code":"# S3 method for class 'BFBayesFactor' tidy_stats(x, args = NULL)  # S3 method for class 'rcorr' tidy_stats(x, args = NULL)  tidy_stats(x, args = NULL)  # S3 method for class 'htest' tidy_stats(x, args = NULL)  # S3 method for class 'pairwise.htest' tidy_stats(x, args = NULL)  # S3 method for class 'lm' tidy_stats(x, args = NULL)  # S3 method for class 'glm' tidy_stats(x, args = NULL)  # S3 method for class 'anova' tidy_stats(x, args = NULL)  # S3 method for class 'aov' tidy_stats(x, args = NULL)  # S3 method for class 'aovlist' tidy_stats(x, args = NULL)  # S3 method for class 'confint' tidy_stats(x, args = NULL)  # S3 method for class 'afex_aov' tidy_stats(x, args = NULL)  # S3 method for class 'mixed' tidy_stats(x, args = NULL)  # S3 method for class 'brmsfit' tidy_stats(x, args = NULL)  # S3 method for class 'effectsize_difference' tidy_stats(x, args = NULL)  # S3 method for class 'effsize' tidy_stats(x, args = NULL)  # S3 method for class 'emmGrid' tidy_stats(x, args = NULL)  # S3 method for class 'summary_emm' tidy_stats(x, args = NULL)  # S3 method for class 'emm_list' tidy_stats(x, args = NULL)  # S3 method for class 'icclist' tidy_stats(x, args = NULL)  # S3 method for class 'lavaan' tidy_stats(x, args = NULL)  # S3 method for class 'lmerMod' tidy_stats(x, args = NULL)  # S3 method for class 'lmerModLmerTest' tidy_stats(x, args = NULL)  # S3 method for class 'lme' tidy_stats(x, args = NULL)  # S3 method for class 'nlme' tidy_stats(x, args = NULL)  # S3 method for class 'anova.lme' tidy_stats(x, args = NULL)  # S3 method for class 'gls' tidy_stats(x, args = NULL)  # S3 method for class 'psych' tidy_stats(x, args = NULL)  # S3 method for class 'tidystats' tidy_stats(x, args = NULL)  # S3 method for class 'tidystats_descriptives' tidy_stats(x, args = NULL)  # S3 method for class 'tidystats_counts' tidy_stats(x, args = NULL)"},{"path":"https://willemsleegers.github.io/tidystats/reference/tidy_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"x output statistical test.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/tidy_stats.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"tidy_stats(BFBayesFactor): tidy_stats method class 'BayesFactor' tidy_stats(rcorr): tidy_stats method class 'rcorr' tidy_stats(htest): tidy_stats method class 'htest' tidy_stats(pairwise.htest): tidy_stats method class 'pairwise.htest' tidy_stats(lm): tidy_stats method class 'lm' tidy_stats(glm): tidy_stats method class 'glm' tidy_stats(anova): tidy_stats method class 'anova' tidy_stats(aov): tidy_stats method class 'aov' tidy_stats(aovlist): tidy_stats method class 'aovlist' tidy_stats(confint): tidy_stats method class 'confint' tidy_stats(afex_aov): tidy_stats method class 'afex_aov' tidy_stats(mixed): tidy_stats method class 'afex_aov' tidy_stats(brmsfit): tidy_stats method class 'brmsfit' tidy_stats(effectsize_difference): tidy_stats method class 'effectsize_difference' tidy_stats(effsize): tidy_stats method class 'effsize' tidy_stats(emmGrid): tidy_stats method class 'emmGrid' tidy_stats(summary_emm): tidy_stats method class 'summary_emm' tidy_stats(emm_list): tidy_stats method class 'emm_list' tidy_stats(icclist): tidy_stats method class 'icclist' tidy_stats(lavaan): tidy_stats method class 'lavaan' tidy_stats(lmerMod): tidy_stats method class 'lmerMod' tidy_stats(lmerModLmerTest): tidy_stats method class 'lmerModLmerTest' tidy_stats(lme): tidy_stats method class 'lme' tidy_stats(nlme): tidy_stats method class 'nlme' tidy_stats(anova.lme): tidy_stats method class 'anova.lme' tidy_stats(gls): tidy_stats method class 'gls' tidy_stats(psych): tidy_stats method class 'psych' tidy_stats(tidystats): tidy_stats method class 'tidystats' tidy_stats(tidystats_descriptives): tidy_stats method class 'tidystats_descriptives' tidy_stats(tidystats_counts): tidy_stats method class 'tidystats_counts'","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/tidy_stats_to_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","title":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","text":"tidy_stats_to_data_frame() converts tidystats list data frame, can used extract specific statistics using standard subsetting functions (e.g., dplyr::filter()).","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/tidy_stats_to_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","text":"","code":"tidy_stats_to_data_frame(x)"},{"path":"https://willemsleegers.github.io/tidystats/reference/tidy_stats_to_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","text":"x tidystats list.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/tidy_stats_to_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","text":"","code":"# Conduct analyses sleep_wide <- reshape(   sleep,   direction = \"wide\",   idvar = \"ID\",   timevar = \"group\",   sep = \"_\" ) sleep_test <- t.test(sleep_wide$extra_1, sleep_wide$extra_2, paired = TRUE)  ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14) trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69) group <- gl(2, 10, 20, labels = c(\"Ctl\", \"Trt\")) weight <- c(ctl, trt) lm_D9 <- lm(weight ~ group)  npk_aov <- aov(yield ~ block + N * P * K, npk)  # Create an empty list to store the statistics in statistics <- list()  # Add statistics statistics <- statistics |>   add_stats(sleep_test, type = \"primary\", preregistered = TRUE) |>   add_stats(lm_D9) |>   add_stats(npk_aov, notes = \"An ANOVA example\")  # Convert the list to a data frame df <- tidy_stats_to_data_frame(statistics)  # Select all the p-values dplyr::filter(df, statistic_name == \"p\") #> # A tibble: 11 × 12 #>    identifier analysis_name      group_name_1 group_name_2 statistic_name symbol #>    <chr>      <chr>              <chr>        <chr>        <chr>          <chr>  #>  1 sleep_test sleep_wide$extra_… NA           NA           p              NA     #>  2 lm_D9      weight ~ group     Model        NA           p              NA     #>  3 lm_D9      weight ~ group     Coefficients (Intercept)  p              NA     #>  4 lm_D9      weight ~ group     Coefficients groupTrt     p              NA     #>  5 npk_aov    yield ~ block + N… Terms        block        p              NA     #>  6 npk_aov    yield ~ block + N… Terms        N            p              NA     #>  7 npk_aov    yield ~ block + N… Terms        P            p              NA     #>  8 npk_aov    yield ~ block + N… Terms        K            p              NA     #>  9 npk_aov    yield ~ block + N… Terms        N:P          p              NA     #> 10 npk_aov    yield ~ block + N… Terms        N:K          p              NA     #> 11 npk_aov    yield ~ block + N… Terms        P:K          p              NA     #> # ℹ 6 more variables: subscript <chr>, lower <dbl>, value <dbl>, upper <dbl>, #> #   interval <chr>, level <dbl>"},{"path":"https://willemsleegers.github.io/tidystats/reference/write_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a tidystats list to a file — write_stats","title":"Write a tidystats list to a file — write_stats","text":"write_stats() writes tidystats list .json file.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/write_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a tidystats list to a file — write_stats","text":"","code":"write_stats(x, path, digits = 6)"},{"path":"https://willemsleegers.github.io/tidystats/reference/write_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a tidystats list to a file — write_stats","text":"x tidystats list. path string specifying path connection write . digits number decimal places use. default 6.","code":""},{"path":"https://willemsleegers.github.io/tidystats/reference/write_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a tidystats list to a file — write_stats","text":"","code":"# Conduct a statistical test sleep_wide <- reshape(   sleep,   direction = \"wide\",   idvar = \"ID\",   timevar = \"group\",   sep = \"_\" ) sleep_test <- t.test(sleep_wide$extra_1, sleep_wide$extra_2, paired = TRUE)  # Create an empty list statistics <- list()  # Add statistics to the list statistics <- add_stats(statistics, sleep_test)  # Save the statistics to a file dir <- tempdir() write_stats(statistics, file.path(dir, \"statistics.json\"))"},{"path":[]},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"changes-0-6-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.6.3","text":"Updated maintain support lme4 package, renamed deviance statistic -2*log(L). Updated README.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-062","dir":"Changelog","previous_headings":"","what":"tidystats 0.6.2","title":"tidystats 0.6.2","text":"CRAN release: 2024-07-14","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"changes-0-6-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.6.2","text":"Updated package maintain support currently supported statistical functions.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-061","dir":"Changelog","previous_headings":"","what":"tidystats 0.6.1","title":"tidystats 0.6.1","text":"CRAN release: 2024-04-09","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"new-0-6-1","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.6.1","text":"Added CITATION file. Use citation(\"tidystats\") see cite tidystats.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"changes-0-6-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.6.1","text":"Updated package maintain support currently supported statistical functions.","code":""},{"path":[]},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"breaking-changes-0-6","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tidystats 0.6","text":"Redesigned tidystats structure expandable. breaks compatibility Microsoft Word add-. update Microsoft Word add-works released soon.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"changes-0-6","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.6","text":"Renamed results argument add_stats() list Removed multiplication 100 count_data()’s pct column make easier present numbers percentages (e.g., using scales::label_percent()). can still obtain percentages using new pct argument. Removed pct column output describe_data(). Improved names anova() tests.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"new-0-6","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.6","text":"Added two new arguments add_stats(): args class. args argument can used supply additional arguments customize statistics extracted particular analysis. list supported functions, see “Details” section help document add_stats(). class argument can used explicitly indicate class analysis want add. Sometimes output particular analysis returns object insufficient information tidystats know extract statistics. using class argument, can tell tidystats kind object can nevertheless extract statistics. list supported classes, see Details section help document add_stats(). Added support confint() function stats package using new class argument `add_stats(). Added support alpha(), corr.test(), mardia(), ICC() functions psych package. Added support icc() function irr package. Added support cohen.d() function effsize package. Added support emmeans() function emmeans package. Added support test() function result contrast() result emmeans() emmeans package. Added support lme(), nlme(), gls(), anova() nlme package. Added support many functions stats package. Added support effectsize package. Added support effsize package. Added support afex package. Added pct argument count_data() return proportions instead percentages.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-052","dir":"Changelog","previous_headings":"","what":"tidystats 0.5.2","title":"tidystats 0.5.2","text":"CRAN release: 2023-04-14 minor bug fix update keep package CRAN.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"miscellaneous-0-5-2","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"tidystats 0.5.2","text":"Removed info message displayed package loaded.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-051","dir":"Changelog","previous_headings":"","what":"tidystats 0.5.1","title":"tidystats 0.5.1","text":"CRAN release: 2022-01-04","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"changes-0-5-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.5.1","text":"Renamed variable column output describe_data() var. Improved ordering columns output describe_data(). Removed automatically setting method ‘Generic test’ adding custom test. means can set method now. Renames variable column var describe_data(). describe_data() now () support multiple variables. can provide 1 column name (separated commas) calculate descriptives variable.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"bug-fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"tidystats 0.5.1","text":"Using tidy_stats() ungrouped count data produced count_data() now properly tidied. Fixed order columns describe_data() data grouped. Fixed bug trying add results multilevel model (“Error summaryngrps[[names(summaryngrps[[names(summaryngrps) == group$name]] : attempt select one element vectorIndex”) Fixed GitHub issue #8.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-05","dir":"Changelog","previous_headings":"","what":"tidystats 0.5","title":"tidystats 0.5","text":"CRAN release: 2020-09-21","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"breaking-changes-0-5","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tidystats 0.5","text":"Changed way certain model results parsed. estimate now parsed list containing name estimate value estimate. Models now parsed extract following types lists: statistics, terms, pairs, groups, effects. new parsing unites t-tests, ANOVA, regression, including multilevel regression.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"new-0-5","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.5","text":"Added support generic tests. tidystats support particular analysis, can create generic test providing list statistics. Improved support anova(). Added support BayesFactor functions. Added pkgdown website package. Added several vignettes, including introduction tidystats, use tidy_stats_to_data_frame() function, description tidystats taxonomy.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"miscellaneous-0-5","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"tidystats 0.5","text":"Removed cox dataset.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-041","dir":"Changelog","previous_headings":"","what":"tidystats 0.4.1","title":"tidystats 0.4.1","text":"CRAN release: 2020-06-15","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"changes-0-4-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.4.1","text":"read_stats() now converts Inf character strings numeric. write_stats() now digits argument determines number decimals saved numbers (default: 6).","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"new-0-4-1","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.4.1","text":"Added support anova(). Added count_data() .","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"tidystats 0.4.1","text":"Fixed bug describe_data() caused dplyr 1.0.0 update.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"miscellaneous-0-4-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"tidystats 0.4.1","text":"Added tests minimize bugs Added two vignettes","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-04","dir":"Changelog","previous_headings":"","what":"tidystats 0.4","title":"tidystats 0.4","text":"CRAN release: 2019-09-12","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"breaking-changes-0-4","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tidystats 0.4","text":"tidystats completely redesigned terms statistics combined together. previously output statistical models converted tidy data frame, output now converted list, entirely different structure. reason change lists machine-readable, enabling interesting features line. still possible convert list statistics single data frame new function called tidy_stats_to_data_frame(). significant changes made tidystats resulted loss previously supported statistical functions. list currently supported statistical functions, see help document add_stats() README. report() functions removed now. may return (get impression liked) now focusing development time creating Word add-enable researchers use tidystats-produced file reporting statistics Microsoft Word. describe_data() longer accepts multiple column names. goal function now calculate descriptives single column (can still grouped calculate descriptives group level). count_data() removed.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"changes-0-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.4","text":"add_stats() now type argument specify whether analysis primary analysis, secondary analysis, exploratory analysis. add_stats() now preregistered argument specify whether analysis preregistered .","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"new-0-4","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.4","text":"Added example dataset called ‘quote_source’ containing data replication Lorge & Curtiss (1936) part Many Labs project (Klein et al., 2014)","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-03","dir":"Changelog","previous_headings":"","what":"tidystats 0.3","title":"tidystats 0.3","text":"CRAN release: 2019-01-03","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"changes-0-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.3","text":"Changed argument order family add_stats() functions. Previously, model output tidy data frame first argument. allowed directly pipe model output add_stats() (using magrittr’s %>%). However, alternative approach tidystats list first argument. allows create long sequence pipes. start results list, add model via add_stats(), pipe result next add_stats(), . Since often store model output variable names anyway, probably convenient. Additionally, probably also keeps script tidy (can end data analysis script). Certain statistical models now tidied differently due addition ‘group’ column. Several models like multilevel models, meta-analytic models, arguably also regression models just terms (e.g., model fit), distinguish coefficients parts output, ‘group’ column added. also means usage report() affected, now group specified necessary. Affected models regression, within-subjects ANOVA, multilevel models, meta-analysis models. Removed identifier column list element using read_stats(). Reordered columns tidy_stats.lm() tidy_stats.glm() consistent tidy_stats() functions. Added check existing identifier add_stats_to_model(). Added warnings case unsupported output added (e.g., pre-tided data frame). read_stats() now removes empty columns list element.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"new-0-3","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.3","text":"Added new function called inspect(). function accepts tidystats results list output statistical model display results RStudio’s Viewer pane. allows user visually inspect results , importantly, copy results APA style clipboard. function aimed users prefer use R Markdown want quickly run model get results APA-style. new function works well Microsoft Word, work Apple Pages (styling lost copying results). Added class argument add_stats() add_stats_to_model(). statistical tests return normal data.frame matrix, specify test produced results. makes difficult tidystats figure tidy result. Previously, solved add_stats() accepting pre-tidied data frames. Now added class argument specify name function produced results, can tidy . Run ?add_stats see list supported classes see help document tidy_stats.confint() example. hood: Added generic report function single values called report_statistic(). Consequently, report functions updated use new generic function. Added support glm(). Added support lme4’s lmer() lmerTest’s lmer(). Added support psych’s alpha(). Added support psych’s ICC(). Added support stats’ confint() via new class argument add_stats() add_stats_to_model().","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"bug-fixes-0-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"tidystats 0.3","text":"Fixed bug incorrectly classify ANOVAs One-way ANOVAs character variables used rather factors. Prepared dplyr 0.8.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"miscellaneous-0-3","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"tidystats 0.3","text":"Added tests R package minimize bugs. Made code documentation consistent. Added --hood helper function rename statistics columns.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-02","dir":"Changelog","previous_headings":"","what":"tidystats 0.2","title":"tidystats 0.2","text":"CRAN release: 2018-05-06","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"changes-0-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.2","text":"Renamed describe() describe_data() longer conflicts psych’s describe(). Changed describe_data() longer accept non-numeric variables, added feature descriptives can calculated 1 variable time. recommended use count_data() function non-numeric variables. Renamed tidy_descriptives() tidy_describe_data() improved function. notable change var information now returned identify descriptives belong variable. Also changed group delimiter ’ - ’. write_stats() now prettifies numbers using prettyNum() saving disk.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"new-0-2","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.2","text":"Improved report() function. method now supports option retrieve single statistic tidy stats data frame. allow report statistics, even reporting functions specific method yet supported. Added quick report functions means standard deviations. Instead using report() can use M() SD() quickly report mean standard deviation, without specify particular statistic. Less typing! Added option called ‘tidystats_list’ options() set default list. setting tidystats list options(), need specify list results argument report(). Less typing! Reporting regression results now include check whether confidence intervals included, report . Added skewness kurtosis describe_data() Added new count_data() function calculate count descriptives categorical data. Also added tidy_count_data() function tidy output new function. Added support chisq.test() wilcox.test(). Added better default identifier add_stats(). supply variable added tidystats list, identifier provided, take variable name identifier. pipe results add_stats() old default identifier used (e.g., “M1”). Added identifier check report(). function now throw error identifier exist. Added statistic check report functions. function now throw error statistic exist. Improved report_p_value() support multiple p-values. Updated documentation consistent take account changes made current update.","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"bug-fixes-0-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"tidystats 0.2","text":"Fixed bug assumed confidence intervals htest objects always 95% confidence intervals. Fixed bug report functions occur statistic argument provided. Removed spaces terms aov() output. Removed leading space method information Two Sample t-test. Improved add_stats_to_model(). method previously required term automatically complete information (e.g., method information).","code":""},{"path":"https://willemsleegers.github.io/tidystats/news/index.html","id":"tidystats-01","dir":"Changelog","previous_headings":"","what":"tidystats 0.1","title":"tidystats 0.1","text":"CRAN release: 2017-10-29 Initial release","code":""}]
