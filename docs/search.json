[{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/articles/1-introduction-to-tidystats.html","id":"why-use-tidystats","dir":"Articles","previous_headings":"","what":"Why use tidystats?","title":"Introduction to tidystats","text":"tidystats package designed address two problems common scientific research: incomplete incorrect statistics reporting. problem incomplete statistics reporting likely stems fundamental trade-wanting comprehensive one hand providing clear narrative . problem incorrect statistics reporting likely caused manually copy-pasting statistical output output window text editor. tidystats addresses two problems enabling researchers combine statistical analyses single file, subset analyses can reported using Microsoft Word add-.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/articles/1-introduction-to-tidystats.html","id":"how-to-use-tidystats","dir":"Articles","previous_headings":"","what":"How to use tidystats?","title":"Introduction to tidystats","text":"tidystats designed easily fit data analysis workflow. fact, tidystats can simply tacked end data analysis session, one minor requirement. requirement analyses stored variable. example, run regression analysis using lm() function, store result analysis variable: model1 <- lm(extra ~ group, data = sleep). storing analysis variable, can later add analysis list using add_stats() function tidystats. analyses gathered together, save analyses .json file using write_stats() function. .json file can read Word add-report analyses Word, shared others read R extract statistics analyses (e.g., meta-analyses).","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/articles/1-introduction-to-tidystats.html","id":"an-example","dir":"Articles","previous_headings":"","what":"An example","title":"Introduction to tidystats","text":"follows example analyses conducted quote_source data contained within tidystats package. data large-scaled replication Lorge & Curtiss (1936). details can found paper replication effort (Klein et al., 2014). short, participants saw following quote: “sworn live free, even find bitter taste death.” quote attributed either George Washington, liked individual, Osama Bin Laden, disliked individual. Participants asked extent agree quote, 9-point Likert scale ranging 1 (disagreement) 9 (agreement). start bit setup. main hypothesis people like quote attributed George Washington compared Osama Bin Laden. test hypothesis first looking descriptives conducting t-test. Participants appear rate quote bit positively attributed George Washington. can also perform additional tests. instance, matter participant US? age matter? answer questions, can perform interaction tests using lm(). interaction participant U.S. : interaction significant, appears matter whether participant U.S. . fact, participants U.S. show stronger effect outside U.S. interaction participant’s age: significant interaction effect, evidence age changing size effect. Let’s say analyses want save output report later. tidystats comes . steps perform first create empty list use add_stats() function add analyses list. stored analysis variable. add_stats() function takes analysis, extracts statistics, adds result list. Optionally, can add additional information analysis, whether preregistered, whether primary, secondary, exploratory analysis, simply add notes. can see added quite information first second analysis. recommended easy forget analysis ; might accidentally report wrong analysis many . ’s also nice add documentation others familiar data can also better understand analysis. save analyses file, can use write_stats() function. Note file extension: .json. types files simply text files, format machine-readable (unfortunately, human-readable). file can used share others can read back R extract statistics (e.g., meta-analyses) report statistics Word.","code":"# Load packages library(tidystats) library(dplyr)  # Load data data <- tidystats::quote_source descriptives <- data %>%   group_by(source) %>%   describe_data(response, short = TRUE) descriptives t_test <- t.test(response ~ source, data = data) t_test #>  #>  Welch Two Sample t-test #>  #> data:  response by source #> t = -13, df = 6323, p-value <2e-16 #> alternative hypothesis: true difference in means between group Bin Laden and group Washington is not equal to 0 #> 95 percent confidence interval: #>  -0.802 -0.589 #> sample estimates: #>  mean in group Bin Laden mean in group Washington  #>                     5.23                     5.93 lm_us_or_not <- lm(response ~ source * us_or_international, data = data) summary(lm_us_or_not) #>  #> Call: #> lm(formula = response ~ source * us_or_international, data = data) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -5.005 -1.228 -0.228  1.772  3.772  #>  #> Coefficients: #>                                        Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                              5.2488     0.0849   61.83  < 2e-16 *** #> sourceWashington                         0.4052     0.1172    3.46  0.00055 *** #> us_or_internationalUS                   -0.0210     0.0955   -0.22  0.82589     #> sourceWashington:us_or_internationalUS   0.3717     0.1323    2.81  0.00497 **  #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 2.16 on 6321 degrees of freedom #>   (18 observations deleted due to missingness) #> Multiple R-squared:  0.0275, Adjusted R-squared:  0.027  #> F-statistic: 59.5 on 3 and 6321 DF,  p-value: <2e-16 lm_age <- lm(response ~ source * age, data = data) summary(lm_age) #>  #> Call: #> lm(formula = response ~ source * age, data = data) #>  #> Residuals: #>    Min     1Q Median     3Q    Max  #> -5.743 -1.202 -0.152  1.793  3.883  #>  #> Coefficients: #>                      Estimate Std. Error t value Pr(>|t|)     #> (Intercept)           4.93370    0.09589   51.45  < 2e-16 *** #> sourceWashington      0.55737    0.13558    4.11    4e-05 *** #> age                   0.01147    0.00336    3.41  0.00065 *** #> sourceWashington:age  0.00545    0.00478    1.14  0.25433     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 2.16 on 6308 degrees of freedom #>   (31 observations deleted due to missingness) #> Multiple R-squared:  0.0308, Adjusted R-squared:  0.0304  #> F-statistic: 66.9 on 3 and 6308 DF,  p-value: <2e-16 # Create an empty list to store the analyses in results <- list()  # Add the analyses results <- results %>%   add_stats(t_test,     preregistered = TRUE, type = \"primary\",     notes = \"A t-test comparing the effect of source on the quote rating.\"   ) %>%   add_stats(lm_us_or_not,     preregistered = FALSE, type = \"exploratory\",     notes = \"Interaction effect with being from the U.S. or not.\"   ) %>%   add_stats(lm_age) write_stats(results, \"lorge-curtiss-1936-replication.json\")"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/articles/1-introduction-to-tidystats.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to tidystats","text":"Lorge, ., & Curtiss, C. C. (1936). Prestige, suggestion, attitudes. Journal Social Psychology, 7, 386-402. https://doi.org/10.1080/00224545.1936.9919891 Klein, R.. et al. (2014) Investigating Variation Replicability: “Many Labs” Replication Project. Social Psychology, 45(3), 142-152. https://dx.doi.org/10.1027/1864-9335/a000178","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/articles/2-custom-statistics.html","id":"example-1","dir":"Articles","previous_headings":"","what":"Example 1","title":"Custom statistics","text":"Say want calculate Bayes Factor using BIC approach (Wagenmakers, 2007). example approach can found ; ’ll repeat . produces BIC 5.05. Now, add value tidystats list? try standard way, ’ll see fails. produces error message says: Error UseMethod(“tidy_stats”) : applicable method ‘tidy_stats’ applied object class “c(‘double’, ‘numeric’)” BF_BIC simply number output statistical test. Statistical tests often return object specific class. tidystats checks class object figure extract statistics. object simply number, tidystats doesn’t know parse . let’s manually. Now don’t get error. tidystats sees list assumes structured correctly. structure, case, consists list contains element called statistics, list contains element called BIC, BIC value want store. can save results list using write_stats() load resulting JSON file Word add-reproducibly report BIC value.","code":"# Set seed for reproducibility set.seed(14)  # Simulate some data intercept_data <- data.frame(score = scale(rnorm(40), center = 0.72))  # Run two models and calculate the BIC full_lm <- lm(score ~ 1, intercept_data) null_lm <- lm(score ~ 0, intercept_data)  BF_BIC <- exp((BIC(null_lm) - BIC(full_lm)) / 2) # Load the tidystats package library(tidystats)  # Create an empty list results <- list()  # Add BIC to the list using add_stats() results <- add_stats(results, BF_BIC) # Create an empty list results <- list()  # Create a list containing the BIC BIC <- list(   method = \"BIC\",   statistics = list(     BIC = BF_BIC   ) )  # Add the BIC to the list results <- add_stats(results, BIC)"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/articles/2-custom-statistics.html","id":"example-2","dir":"Articles","previous_headings":"","what":"Example 2","title":"Custom statistics","text":"Let’s look complex example next. Say want calculate confidence intervals several parameters linear model, using confint() function. Unfortunately, get error. ’s confint() return standard matrix, rather object specific confint() function. means need manually tidy confidence interval values. lot complicated previous example. ’s particular case involves multiple terms contain statistics, consist confidence intervals, consist three elements: level, upper value, lower value. including example show possible also tidy relatively complex structures, ideally tidystats automatically . done custom tidying, now possible add list using add_stats(). , , can load Word add-report statistics.","code":"# Run a linear model fit <- lm(100 / mpg ~ disp, data = mtcars)  # Compute the confidence intervals fit_CIs <- confint(fit)  # Create an empty list results <- list()  # Add linear model and confidence intervals to the list results <- results %>%   add_stats(fit) %>%   add_stats(fit_CIs) fit_CIs_list <- list(   method = \"Confidence intervals\",   terms = list(     list(       name = \"(Intercept)\",       statistics = list(         CI = list(           CI_level = .95,           CI_lower = fit_CIs[1, 1],           CI_upper = fit_CIs[1, 2]         )       )     ),     list(       name = \"disp\",       statistics = list(         CI = list(           CI_level = .95,           CI_lower = fit_CIs[2, 1],           CI_upper = fit_CIs[2, 2]         )       )     )   ) ) # Create an empty list results <- list()  # Add linear model and confidence intervals to the list results <- results %>%   add_stats(fit) %>%   add_stats(fit_CIs_list)  # Save stats write_stats(results, \"results.json\")"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/articles/2-custom-statistics.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Custom statistics","text":"tidystats works taking output statistical tests, extracting statistics, reorganizing particular structure. works 1) tidystats built-support function 2) function used run statistical test returns object tidystats can use identify test. want use tidystats function supported yet, please contact let know add support . Alternatively, can manually create list statistics supply add_stats() function. Note list specific structure. goal tidystats support many tests possible, rarely resort solution.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/articles/4-tidystats-development.html","id":"steps","dir":"Articles","previous_headings":"","what":"Steps:","title":"tidystats development","text":"Identify new analysis function Inspect help document copy examples Run examples inspect output analysis","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Willem Sleegers. Maintainer.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sleegers W (2023). tidystats: Save Output Statistical Tests. R package version 0.6, https://willemsleegers.github.io/tidystats/.","code":"@Manual{,   title = {tidystats: Save Output of Statistical Tests},   author = {Willem Sleegers},   year = {2023},   note = {R package version 0.6},   url = {https://willemsleegers.github.io/tidystats/}, }"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/index.html","id":"tidystats","dir":"","previous_headings":"","what":"Save Output of Statistical Tests ","title":"Save Output of Statistical Tests ","text":"Author: Willem Sleegers License: MIT tidystats R package sharing reporting statistics. tidystats extracts statistics output statistical functions (e.g., t.test(), lm()) stores structured format. resulting file can shared others used popular text editors reproducibly report statistics. Please see instructions install use package. note package currently development. means package may contain bugs subject significant changes. find bugs feedback, please let know creating issue Github (’s really easy !).","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Save Output of Statistical Tests ","text":"tidystats can installed CRAN. can also install development version GitHub using remotes package.","code":"install.packages(\"tidystats\") remotes::install_github(\"willemsleegers/tidystats\")"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Save Output of Statistical Tests ","text":"main function add_stats(). function 2 necessary arguments: list: list want add statistical output . output: output statistics function want add list (e.g., output t.test() lm()) Optionally, can also specify meta-information: identifier: unique identifier identify model (e.g., ‘weight_height_correlation’). provide one, one automatically created . type: type specifies type analysis primary, secondary, exploratory. preregistered: Whether analysis preregistered . notes: Additional information think useful record. added statistics list, can write contents file using write_stats() function.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Save Output of Statistical Tests ","text":"following example shows combine save statistics three different statistical tests. result .json file contains statistics three statistical tests. want see file looks like, can inspect .","code":"# Conduct a t-test, regression, and an ANOVA sleep_test <- t.test(extra ~ group, data = sleep, paired = TRUE)  ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14) trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69) group <- gl(2, 10, 20, labels = c(\"Ctl\", \"Trt\")) weight <- c(ctl, trt) lm_D9 <- lm(weight ~ group)  npk_aov <- aov(yield ~ block + N * P * K, npk)  # Create an empty list to add the statistics to statistics <- list()  # Add the statistics, as well as some meta-information statistics <- statistics |>   add_stats(sleep_test, type = \"primary\") |>   add_stats(lm_D9, preregistered = FALSE) |>   add_stats(npk_aov, notes = \"An ANOVA example\")  # Save the statistics to a file write_stats(statistics, \"statistics.json\")"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/index.html","id":"supported-statistical-functions","dir":"","previous_headings":"","what":"Supported statistical functions","title":"Save Output of Statistical Tests ","text":"tidystats supports functions following packages: stats lme4 lmerTest BayesFactor tidystats cases need provide extra information add_stats() function order tidystats correctly extract statistics. can see list functions require class argument documentation add_stats() function (?add_stats). want use tidystats unsupported function, two things can : Request support new function creating Issue. information means add support function, see tidystats development vignette. Manually extract statistics add via add_stats() using custom_stats() function. See vignette adding custom statistics information.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/index.html","id":"reporting-statistics","dir":"","previous_headings":"","what":"Reporting statistics","title":"Save Output of Statistical Tests ","text":"file created write_stats() function can used several text editor add-ins reproducibly report statistics. information add-ins, please see tidystats website GitHub pages: Microsoft Word add-Google Docs add-","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/index.html","id":"more-information","dir":"","previous_headings":"","what":"More information","title":"Save Output of Statistical Tests ","text":"See tidystats website information, FAQ, tips tricks, well receive (give) support. questions comments, feel free create issue GitHub see website ways contact .","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/add_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Add statistical output to a tidystats list — add_stats","title":"Add statistical output to a tidystats list — add_stats","text":"add_stats() used add output statistical test tidystats list. adding output, additional information test can added, including type test (primary, secondary, exploratory), whether test preregistered, additional notes. Please note statistical tests supported. See 'Details' list supported statistical tests.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/add_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add statistical output to a tidystats list — add_stats","text":"","code":"add_stats(   list,   output,   identifier = NULL,   type = NULL,   preregistered = NULL,   notes = NULL,   args = NULL,   class = NULL )"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/add_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add statistical output to a tidystats list — add_stats","text":"list tidystats list. output Output statistical test. identifier character string identifying model. Automatically created provided. type character string specifying type analysis: primary, secondary, exploratory. preregistered boolean specifying whether analysis preregistered . notes character string specifying additional information. args list additional arguments customize statistics extracted. See 'Details' list supported analyses. class character string manually specify class object tidystats knows extract statistics. See details list classes supported.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/add_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add statistical output to a tidystats list — add_stats","text":"Supported functions: Supported classes:","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/add_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add statistical output to a tidystats list — add_stats","text":"","code":"# Conduct several analyses sleep_test <- t.test(extra ~ group, data = sleep, paired = TRUE)  ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14) trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69) group <- gl(2, 10, 20, labels = c(\"Ctl\", \"Trt\")) weight <- c(ctl, trt) lm_D9 <- lm(weight ~ group)  npk_aov <- aov(yield ~ block + N * P * K, npk)  # Create an empty list statistics <- list()  # Add statistics to the list statistics <- statistics |>   add_stats(sleep_test) |>   add_stats(lm_D9, type = \"primary\", preregistered = TRUE) |>   add_stats(npk_aov, notes = \"An ANOVA example\")"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/count_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of observations — count_data","title":"Count the number of observations — count_data","text":"count_data returns number percentage observations categorical variables.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/count_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of observations — count_data","text":"","code":"count_data(data, ..., na.rm = FALSE, prop = FALSE)"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/count_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of observations — count_data","text":"data data frame. ... One unquoted (categorical) column names data frame, separated commas. na.rm boolean specifying whether missing values (including NaN) removed. prop boolean indicating whether calculate proportions instead percentages. default FALSE.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/count_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count the number of observations — count_data","text":"data frame can grouped using dplyr::group_by() number observations calculated within group level.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/count_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of observations — count_data","text":"","code":"count_data(quote_source, source) #> # A tibble: 2 × 3 #>   source         n   pct #>   <chr>      <int> <dbl> #> 1 Bin Laden   3101  48.9 #> 2 Washington  3242  51.1 count_data(quote_source, source, sex) #> # A tibble: 6 × 4 #>   source     sex        n     pct #>   <chr>      <chr>  <int>   <dbl> #> 1 Bin Laden  female  2067 32.6    #> 2 Bin Laden  male    1029 16.2    #> 3 Bin Laden  NA         5  0.0788 #> 4 Washington female  2206 34.8    #> 5 Washington male    1031 16.3    #> 6 Washington NA         5  0.0788 count_data(quote_source, source, sex, na.rm = TRUE) #> # A tibble: 4 × 4 #>   source     sex        n   pct #>   <chr>      <chr>  <int> <dbl> #> 1 Bin Laden  female  2067  32.6 #> 2 Bin Laden  male    1029  16.2 #> 3 Washington female  2206  34.8 #> 4 Washington male    1031  16.3  # Use dplyr::group_by() to calculate proportions within a group quote_source |>   dplyr::group_by(source) |>   count_data(sex) #> # A tibble: 6 × 4 #> # Groups:   source [2] #>   source     sex        n    pct #>   <chr>      <chr>  <int>  <dbl> #> 1 Bin Laden  female  2067 66.7   #> 2 Bin Laden  male    1029 33.2   #> 3 Bin Laden  NA         5  0.161 #> 4 Washington female  2206 68.0   #> 5 Washington male    1031 31.8   #> 6 Washington NA         5  0.154"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/custom_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom statistic — custom_stat","title":"Create a custom statistic — custom_stat","text":"custom_stat() used together custom_stats() function add custom statistics via add_stats(). See custom_stats() function information.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/custom_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom statistic — custom_stat","text":"","code":"custom_stat(   name,   value,   symbol = NULL,   subscript = NULL,   interval = NULL,   level = NULL,   lower = NULL,   upper = NULL )"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/custom_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom statistic — custom_stat","text":"name string specifying name statistic. value numeric value statistic. symbol string specifying symbol statistic use reporting statistic. subscript string specifying subscript use reporting statistic. interval string specifying type interval statistic ranged statistic (e.g., 95% confidence interval) level numeric value 0 1 indicating level interval. lower numeric value lower bound statistic. upper numeric value upper bound statistic.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/custom_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom statistic — custom_stat","text":"","code":"# Example 1: A single mean value sample <- rnorm(1000, mean = 0, sd = 1) mean <- mean(sample)  custom_stat(name = \"mean\", value = mean, symbol = \"M\") #> [[1]] #> $name #> [1] \"mean\" #>  #> $value #> [1] 0.03421789 #>  #> $symbol #> [1] \"M\" #>  #> attr(,\"class\") #> [1] \"tidystats\" \"list\"      #>   # Example 2: A mean with a 95% confidence interval sample <- rnorm(1000, mean = 0, sd = 1) mean <- mean(sample) se <- sd(sample) / sqrt(length(sample)) CI <- c(mean - 1.96 * se, mean + 1.96 * se)  custom_stat(   name = \"mean\",   value = mean,   symbol = \"M\",   interval = \"CI\",   level = .95,   lower = CI[1],   upper = CI[2] ) #> [[1]] #> $name #> [1] \"mean\" #>  #> $value #> [1] -0.09928426 #>  #> $symbol #> [1] \"M\" #>  #> $interval #> [1] \"CI\" #>  #> $level #> [1] 0.95 #>  #> $lower #> [1] -0.1616088 #>  #> $upper #> [1] -0.03695973 #>  #> attr(,\"class\") #> [1] \"tidystats\" \"list\"      #>"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/custom_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a collection of custom statistics — custom_stats","title":"Create a collection of custom statistics — custom_stats","text":"custom_stats() used create collection custom statistics add statistics list via add_stats(). can used add single statistic group statistics. Note multiple groups statistics supported.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/custom_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a collection of custom statistics — custom_stats","text":"","code":"custom_stats(method, statistics)"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/custom_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a collection of custom statistics — custom_stats","text":"method string specifying method used obtain statistics. statistics vector statistics created custom_stat().","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/custom_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a collection of custom statistics — custom_stats","text":"","code":"# Example 1: BIC Bayes factor (approx.) lm1 <- lm(Fertility ~ ., data = swiss) lm2 <- update(lm1, . ~ . - Examination)  BF10 <- 1 / exp((BIC(lm2) - BIC(lm1)) / 2)  BIC_BFs <- custom_stats(   method = \"BIC Bayes factor\",   statistics = c(     custom_stat(name = \"BF\", value = BF10, subscript = \"10\"),     custom_stat(name = \"BF\", value = 1 / BF10, subscript = \"01\")   ) )  statistics <- list() statistics <- add_stats(statistics, BIC_BFs)"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/describe_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate common descriptive statistics — describe_data","title":"Calculate common descriptive statistics — describe_data","text":"describe_data returns set common descriptive statistics (e.g., n, mean, sd) numeric variables.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/describe_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate common descriptive statistics — describe_data","text":"","code":"describe_data(data, ..., na.rm = TRUE, prop = FALSE, short = FALSE)"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/describe_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate common descriptive statistics — describe_data","text":"data data frame. ... One unquoted column names data frame. na.rm boolean indicating whether missing values (including NaN) excluded calculating descriptives? default TRUE. prop boolean indicating whether calculate proportions instead percentages. default FALSE. short boolean indicating whether subset descriptives reported? set TRUE, N, M, SD returned. default FALSE.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/describe_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate common descriptive statistics — describe_data","text":"data can grouped using dplyr::group_by() descriptives calculated group level. na.rm set FALSE, percentage column added output contains percentage non-missing data. Skew kurtosis based skewness() kurtosis() functions (Komsta & Novomestky, 2015). Percentages calculated based total non-missing observations. na.rm set FALSE, percentages based total missing non-missing observations.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/describe_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate common descriptive statistics — describe_data","text":"","code":"describe_data(quote_source, response) #> # A tibble: 1 × 13 #>   var     missing     N     M    SD     SE   min   max range median  mode   skew #>   <chr>     <int> <int> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl>  <dbl> #> 1 respon…      18  6325  5.59  2.19 0.0275     1     9     8      5     5 -0.137 #> # ℹ 1 more variable: kurtosis <dbl>  describe_data(quote_source, response, na.rm = FALSE) #> # A tibble: 1 × 14 #>   var      missing     N     M    SD    SE   min   max range median  mode  skew #>   <chr>      <int> <int> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> #> 1 response      18  6325    NA    NA    NA    NA    NA    NA     NA     5    NA #> # ℹ 2 more variables: kurtosis <dbl>, pct <dbl>  quote_source |>   dplyr::group_by(source) |>   describe_data(response) #> # A tibble: 2 × 14 #> # Groups:   source [2] #>   var     source missing     N     M    SD     SE   min   max range median  mode #>   <chr>   <chr>    <int> <int> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> #> 1 respon… Bin L…      18  3083  5.23  2.11 0.0380     1     9     8      5     5 #> 2 respon… Washi…       0  3242  5.93  2.21 0.0388     1     9     8      6     5 #> # ℹ 2 more variables: skew <dbl>, kurtosis <dbl>  quote_source |>   dplyr::group_by(source) |>   describe_data(response, short = TRUE) #> # A tibble: 2 × 5 #> # Groups:   source [2] #>   var      source         N     M    SD #>   <chr>    <chr>      <int> <dbl> <dbl> #> 1 response Bin Laden   3083  5.23  2.11 #> 2 response Washington  3242  5.93  2.21"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/helper_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions in tidystats — tidy_matrix","title":"Helper functions in tidystats — tidy_matrix","text":"Functions used hood tidystats package.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/helper_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions in tidystats — tidy_matrix","text":"","code":"tidy_matrix(m, symmetric = TRUE)  add_statistic(   list,   name,   value,   symbol = NULL,   subscript = NULL,   interval = NULL,   level = NULL,   lower = NULL,   upper = NULL )"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/helper_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions in tidystats — tidy_matrix","text":"m matrix.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/helper_functions.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Helper functions in tidystats — tidy_matrix","text":"tidy_matrix(): Function convert matrix objects tidy data frame. add_statistic(): Function add statistic list. helps create list ignores NULL values.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/quote_source.html","id":null,"dir":"Reference","previous_headings":"","what":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"Data multiple studies Many Labs project (Klein et al., 2014) replicating Lorge & Curtiss (1936).","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/quote_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"","code":"quote_source"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/quote_source.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"data frame 6343 rows 15 columns: ID participant number source attributed source quote: Washington Bin Laden response evaluation quote 9-point Likert scale, 1 indicating disagreement 9 indicating agreement age participant's age sex participant's sex citizenship participant's citizenship race participant's race major participant's major native_language participant's native language referrer location study conducted compensation participant compensated participation recruitment participant recruited separation description study administered terms participant isolation us_or_international whether study conducted US outside US (international) lab_or_online whether study conducted lab online","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/quote_source.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"Lorge Curtiss (1936) examined quotation perceived attributed liked disliked individual. quotation interest : \"hold little rebellion, now , good thing, necessary political world storms physical world.\" one condition quotation attributed Thomas Jefferson, liked individual, condition attributed Vladimir Lenin, disliked individual. agreement observed quotation attributed Jefferson Lenin. replication studies, quotation : \"sworn live free, even find bitter taste death.\" quotation attributed either George Washington, liked individual, Osama Bin Laden, disliked individual.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/quote_source.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Many Labs replication of Lorge & Curtiss (1936) — quote_source","text":"Lorge, ., & Curtiss, C. C. (1936). Prestige, suggestion, attitudes. Journal Social Psychology, 7, 386-402. https://doi.org/10.1080/00224545.1936.9919891 Klein, R.. et al. (2014) Investigating Variation Replicability: \"Many Labs\" Replication Project. Social Psychology, 45(3), 142-152. https://dx.doi.org/10.1027/1864-9335/a000178","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/read_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a .json file that was produced with write_stats — read_stats","title":"Read a .json file that was produced with write_stats — read_stats","text":"read_stats() can read .json file containing statistical output produced write_stats(). returns list containing results, identifier name list element.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/read_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a .json file that was produced with write_stats — read_stats","text":"","code":"read_stats(file)"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/read_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a .json file that was produced with write_stats — read_stats","text":"file string; specifying path tidystats data file.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/read_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a .json file that was produced with write_stats — read_stats","text":"","code":"# A simple example, assuming there is a file called 'results.json' if (FALSE) { results <- read_stats(\"results.json\") }  # A working example results <- read_stats(system.file(\"results.json\", package = \"tidystats\")) #> Warning: The file does not have a .json file extension; make sure you have specified the correct file. #> Error in readBin(structure(4L, class = c(\"file\", \"connection\"), conn_id = <pointer: 0x17887>),     raw(0), 32768L): can only read from a binary connection"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"tidy_stats used convert output statistical object list organized statistics. tidy_stats function automatically run add_stats used, generally need use function explicitly. can used, however, peek output specific analysis organized.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"","code":"# S3 method for BFBayesFactor tidy_stats(x, args = NULL)  # S3 method for rcorr tidy_stats(x, args = NULL)  tidy_stats(x, args = NULL)  # S3 method for htest tidy_stats(x, args = NULL)  # S3 method for pairwise.htest tidy_stats(x, args = NULL)  # S3 method for lm tidy_stats(x, args = NULL)  # S3 method for glm tidy_stats(x, args = NULL)  # S3 method for anova tidy_stats(x, args = NULL)  # S3 method for aov tidy_stats(x, args = NULL)  # S3 method for aovlist tidy_stats(x, args = NULL)  # S3 method for confint tidy_stats(x, args = NULL)  # S3 method for afex_aov tidy_stats(x, args = NULL)  # S3 method for mixed tidy_stats(x, args = NULL)  # S3 method for brmsfit tidy_stats(x, args = NULL)  # S3 method for effectsize_difference tidy_stats(x, args = NULL)  # S3 method for effsize tidy_stats(x, args = NULL)  # S3 method for emmGrid tidy_stats(x, args = NULL)  # S3 method for summary_emm tidy_stats(x, args = NULL)  # S3 method for emm_list tidy_stats(x, args = NULL)  # S3 method for icclist tidy_stats(x, args = NULL)  # S3 method for lavaan tidy_stats(x, args = NULL)  # S3 method for lmerMod tidy_stats(x, args = NULL)  # S3 method for lmerModLmerTest tidy_stats(x, args = NULL)  # S3 method for predictions tidy_stats(x, args = NULL)  # S3 method for comparisons tidy_stats(x, args = NULL)  # S3 method for rma.uni tidy_stats(x, args = NULL)  # S3 method for rma.mh tidy_stats(x, args = NULL)  # S3 method for rma.peto tidy_stats(x, args = NULL)  # S3 method for rma.glmm tidy_stats(x, args = NULL)  # S3 method for rma.mv tidy_stats(x, args = NULL)  # S3 method for confint.rma tidy_stats(x, args = NULL)  # S3 method for list.confint.rma tidy_stats(x, args = NULL)  # S3 method for anova.rma tidy_stats(x, args = NULL)  # S3 method for permutest.rma.uni tidy_stats(x, args = NULL)  # S3 method for tes tidy_stats(x, args = NULL)  # S3 method for matreg tidy_stats(x, args = NULL)  # S3 method for ranktest tidy_stats(x, args = NULL)  # S3 method for regtest tidy_stats(x, args = NULL)  # S3 method for fsn tidy_stats(x, args = NULL)  # S3 method for hc.rma.uni tidy_stats(x, args = NULL)  # S3 method for list.rma tidy_stats(x, args = NULL)  # S3 method for lme tidy_stats(x, args = NULL)  # S3 method for nlme tidy_stats(x, args = NULL)  # S3 method for anova.lme tidy_stats(x, args = NULL)  # S3 method for gls tidy_stats(x, args = NULL)  # S3 method for psych tidy_stats(x, args = NULL)  # S3 method for tidystats tidy_stats(x, args = NULL)  # S3 method for tidystats_descriptives tidy_stats(x, args = NULL)  # S3 method for tidystats_counts tidy_stats(x, args = NULL)"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"x output statistical test.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"Please note statistical tests supported. See 'Details' list supported statistical tests. Currently supported functions: stats: t.test() cor.test() chisq.test() wilcox.test() fisher.test() oneway.test() lm() glm() aov() anova() lme4/lmerTest: lmer() BayesFactor: generalTestBF() lmBF() regressionBF() ttestBF() anovaBF() correlationBF() contingencyTableBF() proportionBF() meta.ttestBF() tidystats: describe_data() count_data()","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"tidy_stats(BFBayesFactor): tidy_stats method class 'BayesFactor' tidy_stats(rcorr): tidy_stats method class 'rcorr' tidy_stats(htest): tidy_stats method class 'htest' tidy_stats(pairwise.htest): tidy_stats method class 'pairwise.htest' tidy_stats(lm): tidy_stats method class 'lm' tidy_stats(glm): tidy_stats method class 'glm' tidy_stats(anova): tidy_stats method class 'anova' tidy_stats(aov): tidy_stats method class 'aov' tidy_stats(aovlist): tidy_stats method class 'aovlist' tidy_stats(confint): tidy_stats method class 'confint' tidy_stats(afex_aov): tidy_stats method class 'afex_aov' tidy_stats(mixed): tidy_stats method class 'afex_aov' tidy_stats(brmsfit): tidy_stats method class 'brmsfit' tidy_stats(effectsize_difference): tidy_stats method class 'effectsize_difference' tidy_stats(effsize): tidy_stats method class 'effsize' tidy_stats(emmGrid): tidy_stats method class 'emmGrid' tidy_stats(summary_emm): tidy_stats method class 'summary_emm' tidy_stats(emm_list): tidy_stats method class 'emm_list' tidy_stats(icclist): tidy_stats method class 'icclist' tidy_stats(lavaan): tidy_stats method class 'lavaan' tidy_stats(lmerMod): tidy_stats method class 'lmerMod' tidy_stats(lmerModLmerTest): tidy_stats method class 'lmerModLmerTest' tidy_stats(predictions): tidy_stats method class 'predictions' tidy_stats(comparisons): tidy_stats method class 'comparisons' tidy_stats(rma.uni): tidy_stats method class 'rma.uni' tidy_stats(rma.mh): tidy_stats method class 'rma.mh' tidy_stats(rma.peto): tidy_stats method class 'rma.peto' tidy_stats(rma.glmm): tidy_stats method class 'rma.glmm' tidy_stats(rma.mv): tidy_stats method class 'rma.mv' tidy_stats(confint.rma): tidy_stats method class 'confint.rma' tidy_stats(list.confint.rma): tidy_stats method class 'list.confint.rma' tidy_stats(anova.rma): tidy_stats method class 'anova.rma' tidy_stats(permutest.rma.uni): tidy_stats method class 'permutest.rma.uni' tidy_stats(tes): tidy_stats method class 'tes' tidy_stats(matreg): tidy_stats method class 'matreg' tidy_stats(ranktest): tidy_stats method class 'ranktest' tidy_stats(regtest): tidy_stats method class 'regtest' tidy_stats(fsn): tidy_stats method class 'fsn' tidy_stats(hc.rma.uni): tidy_stats method class 'hc.rma.uni' tidy_stats(list.rma): tidy_stats method class 'list.rma' tidy_stats(lme): tidy_stats method class 'lme' tidy_stats(nlme): tidy_stats method class 'nlme' tidy_stats(anova.lme): tidy_stats method class 'anova.lme' tidy_stats(gls): tidy_stats method class 'gls' tidy_stats(psych): tidy_stats method class 'psych' tidy_stats(tidystats): tidy_stats method class 'tidystats' tidy_stats(tidystats_descriptives): tidy_stats method class 'tidystats_descriptives' tidy_stats(tidystats_counts): tidy_stats method class 'tidystats_counts'","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy the output of a statistics object — tidy_stats.BFBayesFactor","text":"","code":"# Conduct statistical tests # t-test: sleep_test <- t.test(extra ~ group, data = sleep, paired = TRUE)  # lm: ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14) trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69) group <- gl(2, 10, 20, labels = c(\"Ctl\", \"Trt\")) weight <- c(ctl, trt) lm_D9 <- lm(weight ~ group)  # ANOVA: npk_aov <- aov(yield ~ block + N * P * K, npk)  # Tidy the statistics and store each analysis in a separate variable list_sleep_test <- tidy_stats(sleep_test) #> Error in UseMethod(\"tidy_stats\"): no applicable method for 'tidy_stats' applied to an object of class \"htest\" list_lm_D9 <- tidy_stats(lm_D9) #> Error in UseMethod(\"tidy_stats\"): no applicable method for 'tidy_stats' applied to an object of class \"lm\" list_npk_aov <- tidy_stats(npk_aov) #> Error in UseMethod(\"tidy_stats\"): no applicable method for 'tidy_stats' applied to an object of class \"c('aov', 'lm')\"  # Now you can inspect each of these variables, e.g.,: names(list_sleep_test) #> Error in eval(expr, envir, enclos): object 'list_sleep_test' not found str(list_sleep_test) #> Error in eval(expr, envir, enclos): object 'list_sleep_test' not found"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats_to_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","title":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","text":"tidy_stats_to_data_frame() converts tidystats list data frame, can used extract specific statistics using standard subsetting functions (e.g., dplyr::filter()).","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats_to_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","text":"","code":"tidy_stats_to_data_frame(x)"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats_to_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","text":"x tidystats list.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/tidy_stats_to_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a tidystats list to a data frame — tidy_stats_to_data_frame","text":"","code":"# Conduct statistical tests sleep_test <- t.test(extra ~ group, data = sleep, paired = TRUE)  ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14) trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69) group <- gl(2, 10, 20, labels = c(\"Ctl\", \"Trt\")) weight <- c(ctl, trt) lm_D9 <- lm(weight ~ group)  npk_aov <- aov(yield ~ block + N * P * K, npk)  # Create an empty list statistics <- list()  # Add statistics statistics <- statistics |>   add_stats(sleep_test) |>   add_stats(lm_D9, type = \"primary\", preregistered = TRUE) |>   add_stats(npk_aov, notes = \"An ANOVA example\")  # Convert the list to a data frame df <- tidy_stats_to_data_frame(statistics)  # Select all the p-values filter(df, statistic == \"p\") #> # A tibble: 11 × 11 #>    identifier group_1    group_2 statistic symbol subscript lower    value upper #>    <chr>      <chr>      <chr>   <chr>     <chr>  <chr>     <dbl>    <dbl> <dbl> #>  1 sleep_test NA         NA      p         NA     NA           NA 2.83e- 3    NA #>  2 lm_D9      Model      NA      p         NA     NA           NA 2.49e- 1    NA #>  3 lm_D9      Coefficie… (Inter… p         NA     NA           NA 9.55e-15    NA #>  4 lm_D9      Coefficie… groupT… p         NA     NA           NA 2.49e- 1    NA #>  5 npk_aov    Terms      block   p         NA     NA           NA 1.59e- 2    NA #>  6 npk_aov    Terms      N       p         NA     NA           NA 4.37e- 3    NA #>  7 npk_aov    Terms      P       p         NA     NA           NA 4.75e- 1    NA #>  8 npk_aov    Terms      K       p         NA     NA           NA 2.88e- 2    NA #>  9 npk_aov    Terms      N:P     p         NA     NA           NA 2.63e- 1    NA #> 10 npk_aov    Terms      N:K     p         NA     NA           NA 1.69e- 1    NA #> 11 npk_aov    Terms      P:K     p         NA     NA           NA 8.63e- 1    NA #> # ℹ 2 more variables: interval <chr>, level <dbl>"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/write_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a tidystats list to a file — write_stats","title":"Write a tidystats list to a file — write_stats","text":"write_stats() writes tidystats list .json file.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/write_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a tidystats list to a file — write_stats","text":"","code":"write_stats(x, path, digits = 6)"},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/write_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a tidystats list to a file — write_stats","text":"x tidystats list. path Path connection write . digits number decimal places use. default 6.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/reference/write_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a tidystats list to a file — write_stats","text":"","code":"# Conduct statistical tests sleep_test <- t.test(extra ~ group, data = sleep, paired = TRUE)  ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14) trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69) group <- gl(2, 10, 20, labels = c(\"Ctl\", \"Trt\")) weight <- c(ctl, trt) lm_D9 <- lm(weight ~ group)  npk_aov <- aov(yield ~ block + N * P * K, npk)  # Create an empty list results <- list()  # Add output to the results list results <- results |>   add_stats(sleep_test) |>   add_stats(lm_D9, type = \"primary\", preregistered = TRUE) |>   add_stats(npk_aov, notes = \"An ANOVA example\")  # Save the results dir <- tempdir() write_stats(results, file.path(dir, \"results.json\"))"},{"path":[]},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"meta-0-6","dir":"Changelog","previous_headings":"","what":"Meta","title":"tidystats 0.6","text":"Redesigned tidystats structure expandable.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"new-0-6","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.6","text":"Added two new arguments add_stats(): args class. args argument can used supply additional arguments customize statistics extracted particular analysis. list supported functions, see Details section help document add_stats(). class argument can used explicitly indicate class analysis want add. Sometimes output particular analysis returns object insufficient information tidystats know extract statistics. using class argument, can tell tidystats kind object can nevertheless extract statistics. list supported classes, see Details section help document add_stats(). Added support confint() function stats package using new class argument `add_stats(). Added support alpha() function psych package. Added support corr.test() function psych package. Added support icc() function irr package. Added support cohen.d() function effsize package. Added support emmeans() function emmeans package. Added support test() function result contrast() result emmeans() emmeans package. Added support lme(), nlme(), gls(), anova() nlme package. Added support pairwise.t.test(), pairwise.prop.test(), pairwise.wilcox.test() stats package. Added support effectsize package. Added support effsize package.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"changes-0-6","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.6","text":"Renamed results argument add_stats() list Removed multiplication 100 count_data()’s pct column make easier present numbers percentages (e.g., using scales::label_percent()) Added new argument describe_data() count_data() obtain percentages instead proportions. Improved names anova() tests.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"misc-0-6","dir":"Changelog","previous_headings":"","what":"Misc","title":"tidystats 0.6","text":"Removed info message displayed package loaded.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"tidystats-051","dir":"Changelog","previous_headings":"","what":"tidystats 0.5.1","title":"tidystats 0.5.1","text":"CRAN release: 2022-01-04","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"bug-fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"tidystats 0.5.1","text":"Using tidy_stats() ungrouped count data produced count_data() now properly tidied. Fixed order columns describe_data() data grouped. Fixed bug trying add results multilevel model (“Error summaryngrps[[names(summaryngrps) == group$name]] : attempt select one element vectorIndex”) Fixed GitHub issue #8.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"changes-0-5-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.5.1","text":"Removed automatically setting method ‘Generic test’ adding custom test. means can set method now. Renames variable column var describe_data(). describe_data() now () support multiple variables. can provide 1 column name (separated commas) calculate descriptives variable.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"tidystats-05","dir":"Changelog","previous_headings":"","what":"tidystats 0.5","title":"tidystats 0.5","text":"CRAN release: 2020-09-21","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"breaking-changes-0-5","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tidystats 0.5","text":"Changed way certain model results parsed. estimate now parsed list containing name estimate value estimate. Models now parsed extract following types lists: statistics, terms, pairs, groups, effects. new parsing unites t-tests, ANOVA, regression, including multilevel regression.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"new-0-5","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.5","text":"Added support generic tests. tidystats support particular analysis, can create generic test providing list statistics. Improved support anova(). Added support BayesFactor functions. Added pkgdown website package. Added several vignettes, including introduction tidystats, use tidy_stats_to_data_frame function, description tidystats taxonomy.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"misc-0-5","dir":"Changelog","previous_headings":"","what":"Misc","title":"tidystats 0.5","text":"Removed cox dataset.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"tidystats-041","dir":"Changelog","previous_headings":"","what":"tidystats 0.4.1","title":"tidystats 0.4.1","text":"CRAN release: 2020-06-15","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"new-0-4-1","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.4.1","text":"Added support anova(). Added count_data() .","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"improvements-0-4-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tidystats 0.4.1","text":"read_stats() now converts Inf character strings numeric. write_stats() now digits argument determines number decimals saved numbers (default: 6).","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"bug-fixes-0-4-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"tidystats 0.4.1","text":"Fixed bug describe_data() caused dplyr 1.0.0 update.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"misc-0-4-1","dir":"Changelog","previous_headings":"","what":"Misc","title":"tidystats 0.4.1","text":"Added tests minimize bugs Added two vignettes","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"tidystats-04","dir":"Changelog","previous_headings":"","what":"tidystats 0.4","title":"tidystats 0.4","text":"CRAN release: 2019-09-12","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"breaking-changes-0-4","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"tidystats 0.4","text":"tidystats completely redesigned terms statistics combined together. previously output statistical models converted tidy data frame, output now converted list, entirely different structure. reason change lists machine-readable, enabling interesting features line. still possible convert list statistics single data frame new function called tidy_stats_to_data_frame(). significant changes made tidystats resulted loss previously supported statistical functions. list currently supported statistical functions, see help document add_stats() README. report functions removed now. may return (get impression liked) now focusing development time creating Word add-enable researchers use tidystats-produced file reporting statistics Microsoft Word. describe_data() longer accepts multiple column names. goal function now calculate descriptives single column (can still grouped calculate descriptives group level). count_data() removed.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"changes-0-4","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.4","text":"add_stats() now type argument specify whether analysis primary analysis, secondary analysis, exploratory analysis. add_stats() now preregistered argument specify whether analysis preregistered .","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"new-0-4","dir":"Changelog","previous_headings":"","what":"New","title":"tidystats 0.4","text":"Added example dataset called ‘quote_source’ containing data replication Lorge & Curtiss (1936) part Many Labs project (Klein et al., 2014)","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"tidystats-03","dir":"Changelog","previous_headings":"","what":"tidystats 0.3","title":"tidystats 0.3","text":"CRAN release: 2019-01-03","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"changes-0-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.3","text":"Changed argument order family add_stats() functions. Previously, model output tidy data frame first argument. allowed directly pipe model output add_stats() (using magrittr’s %>%). However, alternative approach tidystats list first argument. allows create long sequence pipes. start results list, add model via add_stats(), pipe result next add_stats(), . Since often store model output variable names anyway, probably convenient. Additionally, probably also keeps script tidy (can end data analysis script). Certain statistical models now tidied differently due addition ‘group’ column. Several models like multilevel models, meta-analytic models, arguably also regression models just terms (e.g., model fit), distinguish coefficients parts output, ‘group’ column added. also means usage report() affected, now group specified necessary. Affected models regression, within-subjects ANOVA, multilevel models, meta-analysis models. Added class argument add_stats() add_stats_to_model(). Rather manually tidy data first, can make use custom tidy_stats() functions specifying class argument. Run ?add_stats see list supported classes see help document tidy_stats.confint() example. hood: Added generic report function single values called report_statistic(). Consequently, report functions updated use new generic function. Removed identifier column list element using read_stats(). Reordered columns tidy_stats.lm() tidy_stats.glm() consistent tidy_stats() functions.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"features-0-3","dir":"Changelog","previous_headings":"","what":"Features","title":"tidystats 0.3","text":"Added new function called inspect(). function accepts tidystats results list output statistical model display results RStudio’s Viewer pane. allows user visually inspect results , importantly, copy results APA style clipboard. function aimed users prefer use R Markdown want quickly run model get results APA-style. new function works well Microsoft Word, work Apple Pages (styling lost copying results). Added support glm(). Added support lme4’s lmer() lmerTest’s lmer(). Added support psych’s alpha(). Added support psych’s ICC(). Added support stats’ confint() via new class argument add_stats() add_stats_to_model().","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"improvements-0-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tidystats 0.3","text":"Added check existing identifier add_stats_to_model(). Added class argument add_stats() add_stats_to_model(). statistical tests return normal data.frame matrix, specify test produced results. makes difficult tidystats figure tidy result. Previously, solved add_stats() accepting pre-tidied data frames. Now added class argument specify name function produced results, can tidy . Added warnings case unsupported output added (e.g., pre-tided data frame). read_stats() now removes empty columns list element. Improved documentation.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"bugfixes-0-3","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"tidystats 0.3","text":"Fixed bug incorrectly classify ANOVAs One-way ANOVAs character variables used rather factors. Prepared dplyr 0.8","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"misc-0-3","dir":"Changelog","previous_headings":"","what":"Misc","title":"tidystats 0.3","text":"Added tests R package minimize bugs. Made code documentation consistent Added --hood helper function rename statistics columns","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"tidystats-02","dir":"Changelog","previous_headings":"","what":"tidystats 0.2","title":"tidystats 0.2","text":"CRAN release: 2018-05-06","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"changes-0-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"tidystats 0.2","text":"Renamed describe() describe_data() longer conflicts psych’s describe(). Changed describe_data() longer accept non-numeric variables, added feature descriptives can calculated 1 variable time. recommended use count_data() function non-numeric variables. Renamed tidy_descriptives() tidy_describe_data() improved function. notable change var information now returned identify descriptives belong variable. Also changed group delimiter ’ - ’. write_stats() now prettifies numbers using prettyNum() saving disk.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"new-features-0-2","dir":"Changelog","previous_headings":"","what":"New features","title":"tidystats 0.2","text":"Improved report() function. method now supports option retrieve single statistic tidy stats data frame. allow report statistics, even reporting functions specific method yet supported. Added quick report functions means standard deviations. Instead using report() can use M() SD() quickly report mean standard deviation, without specify particular statistic. Less typing! Added option called ‘tidystats_list’ options() set default list. setting tidystats list options(), need specify list results argument report(). Less typing! Reporting regression results now include check whether confidence intervals included, report . Added skewness kurtosis describe_data() Added new count_data() function calculate count descriptives categorical data. Also added tidy_count_data() function tidy output new function. Added support chisq.test wilcox.test. Added better default identifier add_stats(). supply variable added tidystats list, identifier provided, take variable name identifier. pipe results add_stats() old default identifier used (e.g., “M1”).","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"improvements-0-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tidystats 0.2","text":"Added identifier check report(). function now throw error identifier exist. Added statistic check report functions. function now throw error statistic exist. Improved report_p_value() support multiple p-values. Updated documentation consistent take account changes made current update.","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"bugfixes-0-2","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"tidystats 0.2","text":"Fixed bug assumed confidence intervals htests always 95% confidence intervals. Fixed bug report functions occur statistic argument provided. Removed spaces terms aov() output. Removed leading space method information Two Sample t-test. Improved add_stats_to_model(). method previously required term automatically complete information (e.g., method information).","code":""},{"path":"https://willemsleegers.github.io/tidystats/, https://github.com/WillemSleegers/tidystats/news/index.html","id":"tidystats-01","dir":"Changelog","previous_headings":"","what":"tidystats 0.1","title":"tidystats 0.1","text":"CRAN release: 2017-10-29 Initial release","code":""}]
