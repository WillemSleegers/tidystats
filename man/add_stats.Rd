% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_stats.R
\name{add_stats}
\alias{add_stats}
\title{Add statistical output to a tidystats list}
\usage{
add_stats(
  list,
  output,
  identifier = NULL,
  type = NULL,
  preregistered = NULL,
  notes = NULL,
  args = NULL,
  class = NULL
)
}
\arguments{
\item{list}{A tidystats list.}

\item{output}{Output of a statistical test.}

\item{identifier}{A character string identifying the model. Automatically
created if not provided.}

\item{type}{A character string specifying the type of analysis: primary,
secondary, or exploratory.}

\item{preregistered}{A boolean specifying whether the analysis was
preregistered or not.}

\item{notes}{A character string specifying additional information.}

\item{args}{A list of additional arguments to customize which statistics
should be extracted. See 'Details' for a list of supported analyses.}

\item{class}{A character string to manually specify the class of the object
so that tidystats knows how to extract the statistics. See details for a list
classes that are supported.}
}
\description{
\code{add_stats()} is used to add the output of a statistical test to a
tidystats list.
}
\details{
Many functions to perform statistical tests (e.g., \code{\link[=t.test]{t.test()}}, \code{\link[=lm]{lm()}} return
an object containing the statistics. These objects can be stored in variables
and used with \code{add_stats()} to extract the statistics and add them to a
list.

Additional information about the statistical test can be added, including the
type of test (primary, secondary, or exploratory), whether the test was
preregistered, and additional notes.

Please note that not all statistical tests are supported. See 'Details' below
for a list of supported statistical tests.

The list can be saved to a file using the \code{\link[=write_stats]{write_stats()}} function.

The followings functions are supported so that the statistics contained in
the output of these functions can automatically be extracted.\tabular{ll}{
   \strong{Package} \tab \strong{Functions} \cr
   \code{stats} \tab \code{\link[=t.test]{t.test()}}, \code{\link[=cor.test]{cor.test()}}, \code{\link[=chisq.test]{chisq.test()}}, \cr
    \tab \code{\link[=wilcox.test]{wilcox.test()}}, \code{\link[=fisher.test]{fisher.test()}}, \code{\link[=oneway.test]{oneway.test()}}, \cr
    \tab \code{\link[=lm]{lm()}}, \code{\link[=glm]{glm()}}, \code{\link[=aov]{aov()}}, \code{\link[=anova]{anova()}} \cr
   \code{lme4}/\code{lmerTest} \tab \code{\link[=lmer]{lmer()}} \cr
   \code{BayesFactor} \tab \code{\link[=generalTestBF]{generalTestBF()}}, \code{\link[=lmBF]{lmBF()}}, \code{\link[=regressionBF]{regressionBF()}}, \cr
    \tab \code{\link[=ttestBF]{ttestBF()}}, \code{\link[=anovaBF]{anovaBF()}}, \code{\link[=correlationBF]{correlationBF()}}, \cr
    \tab \code{\link[=contingencyTableBF]{contingencyTableBF()}}, \code{\link[=proportionBF]{proportionBF()}}, \cr
    \tab \code{\link[=meta.ttestBF]{meta.ttestBF()}} \cr
   \code{tidystats} \tab \code{\link[=describe_data]{describe_data()}}, \code{\link[=count_data]{count_data()}} \cr
}


The following functions are supported when their class is explicitly
specified using the \code{class} argument.\tabular{llll}{
   \strong{Package} \tab \strong{Function} \tab \strong{Class name} \tab \strong{Notes} \cr
   \code{stats} \tab \code{\link[=confint]{confint()}} \tab confint \tab  \cr
   \code{emmeans} \tab \code{\link[=mvcontrast]{mvcontrast()}} \tab emm_list \tab If \code{show.ests} = \code{TRUE} \cr
}
}
\examples{
# Conduct analyses
sleep_test <- t.test(extra ~ group, data = sleep, paired = TRUE)

ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14)
trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69)
group <- gl(2, 10, 20, labels = c("Ctl", "Trt"))
weight <- c(ctl, trt)
lm_D9 <- lm(weight ~ group)
lm_D9_confint <- confint(lm_D9)

npk_aov <- aov(yield ~ block + N * P * K, npk)

# Create an empty list
statistics <- list()

# Add statistics to the list
statistics <- statistics |>
  add_stats(sleep_test) |>
  add_stats(lm_D9, type = "primary", preregistered = TRUE) |>
  add_stats(npk_aov, notes = "An ANOVA example")

}
