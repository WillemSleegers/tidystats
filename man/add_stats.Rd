% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_stats.R
\name{add_stats}
\alias{add_stats}
\title{Add statistical output to a tidystats list}
\usage{
add_stats(
  list,
  output,
  identifier = NULL,
  type = NULL,
  preregistered = NULL,
  notes = NULL,
  args = NULL,
  class = NULL
)
}
\arguments{
\item{list}{A tidystats list.}

\item{output}{Output of a statistical test.}

\item{identifier}{A character string identifying the model. Automatically
created if not provided.}

\item{type}{A character string specifying the type of analysis: primary, 
secondary, or exploratory.}

\item{preregistered}{A boolean specifying whether the analysis was 
preregistered or not.}

\item{notes}{A character string specifying additional information.}

\item{args}{A list of additional arguments to customize which statistics 
should be extracted. See details for a list of supported analyses.}

\item{class}{A character string to manually specify the class of the object
so that tidystats knows how to extract the statistics. See details for a list 
classes that are supported.}
}
\description{
\code{add_stats} is used to add the output of a statistical test to a 
tidystats list. While adding the output, additional information about the 
test can be added, including the type of test (primary, secondary, or 
exploratory), whether the test was preregistered, and additional notes. 
Please note that not all statistical tests are supported. See 'Details' below
for a list of supported statistical tests.
}
\details{
Supported functions:

\code{stats}:
\itemize{
  \item \code{t.test()}
  \item \code{cor.test()}
  \item \code{chisq.test()}
  \item \code{wilcox.test()}
  \item \code{fisher.test()}
  \item \code{oneway.test()}
  \item \code{lm()}
  \item \code{glm()}
  \item \code{aov()}
  \item \code{anova()}
}

\code{lme4}/\code{lmerTest}:
\itemize{
  \item \code{lmer()}
}

\code{BayesFactor}:
\itemize{
  \item \code{generalTestBF()}
  \item \code{lmBF()}
  \item \code{regressionBF()}
  \item \code{ttestBF()}
  \item \code{anovaBF()}
  \item \code{correlationBF()}
  \item \code{contingencyTableBF()}
  \item \code{proportionBF()}
  \item \code{meta.ttestBF()}
}

\code{tidystats}:
\itemize{
  \item \code{describe_data()}
  \item \code{count_data()}
}

Supported classes:
\itemize{
  \item \code{confint}
}

Functions with additional arguments:
\itemize{
  \item \code{lavaan}
}
}
\examples{
# Load dplyr for access to the piping operator
library(dplyr)

# Conduct statistical tests
# t-test:
sleep_test <- t.test(extra ~ group, data = sleep, paired = TRUE)

# lm:
ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14)
trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69)
group <- gl(2, 10, 20, labels = c("Ctl", "Trt"))
weight <- c(ctl, trt)
lm_D9 <- lm(weight ~ group)

# ANOVA:
npk_aov <- aov(yield ~ block + N*P*K, npk)

#' # Create an empty list
results <- list()

# Add output to the results list
results <- results \%>\%
  add_stats(sleep_test) \%>\%
  add_stats(lm_D9, type = "primary", preregistered = TRUE) \%>\%
  add_stats(npk_aov, notes = "An ANOVA example")

}
