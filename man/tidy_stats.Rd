% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_stats.BFBayesFactor.r,
%   R/tidy_stats.Hmisc.r, R/tidy_stats.R, R/tidy_stats.afex.r,
%   R/tidy_stats.brmsfit.r, R/tidy_stats.effectsize.r, R/tidy_stats.effsize.r,
%   R/tidy_stats.emmeans.R, R/tidy_stats.irr.r, R/tidy_stats.lavaan.r,
%   R/tidy_stats.lmerMod.r, R/tidy_stats.marginaleffects.R,
%   R/tidy_stats.metafor.r, R/tidy_stats.nlme.r, R/tidy_stats.psych.r,
%   R/tidy_stats.tidystats.r
\name{tidy_stats.BFBayesFactor}
\alias{tidy_stats.BFBayesFactor}
\alias{tidy_stats.rcorr}
\alias{tidy_stats}
\alias{tidy_stats.htest}
\alias{tidy_stats.pairwise.htest}
\alias{tidy_stats.lm}
\alias{tidy_stats.glm}
\alias{tidy_stats.anova}
\alias{tidy_stats.aov}
\alias{tidy_stats.aovlist}
\alias{tidy_stats.confint}
\alias{tidy_stats.afex_aov}
\alias{tidy_stats.mixed}
\alias{tidy_stats.brmsfit}
\alias{tidy_stats.effectsize_difference}
\alias{tidy_stats.effsize}
\alias{tidy_stats.emmGrid}
\alias{tidy_stats.summary_emm}
\alias{tidy_stats.emm_list}
\alias{tidy_stats.icclist}
\alias{tidy_stats.lavaan}
\alias{tidy_stats.lmerMod}
\alias{tidy_stats.lmerModLmerTest}
\alias{tidy_stats.predictions}
\alias{tidy_stats.comparisons}
\alias{tidy_stats.rma.uni}
\alias{tidy_stats.rma.mh}
\alias{tidy_stats.rma.peto}
\alias{tidy_stats.rma.glmm}
\alias{tidy_stats.rma.mv}
\alias{tidy_stats.confint.rma}
\alias{tidy_stats.list.confint.rma}
\alias{tidy_stats.anova.rma}
\alias{tidy_stats.permutest.rma.uni}
\alias{tidy_stats.tes}
\alias{tidy_stats.matreg}
\alias{tidy_stats.ranktest}
\alias{tidy_stats.regtest}
\alias{tidy_stats.fsn}
\alias{tidy_stats.hc.rma.uni}
\alias{tidy_stats.list.rma}
\alias{tidy_stats.lme}
\alias{tidy_stats.nlme}
\alias{tidy_stats.anova.lme}
\alias{tidy_stats.gls}
\alias{tidy_stats.psych}
\alias{tidy_stats.tidystats}
\alias{tidy_stats.tidystats_descriptives}
\alias{tidy_stats.tidystats_counts}
\title{Tidy the output of a statistics object}
\usage{
\method{tidy_stats}{BFBayesFactor}(x, args = NULL)

\method{tidy_stats}{rcorr}(x, args = NULL)

tidy_stats(x, args = NULL)

\method{tidy_stats}{htest}(x, args = NULL)

\method{tidy_stats}{pairwise.htest}(x, args = NULL)

\method{tidy_stats}{lm}(x, args = NULL)

\method{tidy_stats}{glm}(x, args = NULL)

\method{tidy_stats}{anova}(x, args = NULL)

\method{tidy_stats}{aov}(x, args = NULL)

\method{tidy_stats}{aovlist}(x, args = NULL)

\method{tidy_stats}{confint}(x, args = NULL)

\method{tidy_stats}{afex_aov}(x, args = NULL)

\method{tidy_stats}{mixed}(x, args = NULL)

\method{tidy_stats}{brmsfit}(x, args = NULL)

\method{tidy_stats}{effectsize_difference}(x, args = NULL)

\method{tidy_stats}{effsize}(x, args = NULL)

\method{tidy_stats}{emmGrid}(x, args = NULL)

\method{tidy_stats}{summary_emm}(x, args = NULL)

\method{tidy_stats}{emm_list}(x, args = NULL)

\method{tidy_stats}{icclist}(x, args = NULL)

\method{tidy_stats}{lavaan}(x, args = NULL)

\method{tidy_stats}{lmerMod}(x, args = NULL)

\method{tidy_stats}{lmerModLmerTest}(x, args = NULL)

\method{tidy_stats}{predictions}(x, args = NULL)

\method{tidy_stats}{comparisons}(x, args = NULL)

\method{tidy_stats}{rma.uni}(x, args = NULL)

\method{tidy_stats}{rma.mh}(x, args = NULL)

\method{tidy_stats}{rma.peto}(x, args = NULL)

\method{tidy_stats}{rma.glmm}(x, args = NULL)

\method{tidy_stats}{rma.mv}(x, args = NULL)

\method{tidy_stats}{confint.rma}(x, args = NULL)

\method{tidy_stats}{list.confint.rma}(x, args = NULL)

\method{tidy_stats}{anova.rma}(x, args = NULL)

\method{tidy_stats}{permutest.rma.uni}(x, args = NULL)

\method{tidy_stats}{tes}(x, args = NULL)

\method{tidy_stats}{matreg}(x, args = NULL)

\method{tidy_stats}{ranktest}(x, args = NULL)

\method{tidy_stats}{regtest}(x, args = NULL)

\method{tidy_stats}{fsn}(x, args = NULL)

\method{tidy_stats}{hc.rma.uni}(x, args = NULL)

\method{tidy_stats}{list.rma}(x, args = NULL)

\method{tidy_stats}{lme}(x, args = NULL)

\method{tidy_stats}{nlme}(x, args = NULL)

\method{tidy_stats}{anova.lme}(x, args = NULL)

\method{tidy_stats}{gls}(x, args = NULL)

\method{tidy_stats}{psych}(x, args = NULL)

\method{tidy_stats}{tidystats}(x, args = NULL)

\method{tidy_stats}{tidystats_descriptives}(x, args = NULL)

\method{tidy_stats}{tidystats_counts}(x, args = NULL)
}
\arguments{
\item{x}{The output of a statistical test.}
}
\description{
\code{tidy_stats} is used to convert the output of a statistical object to a
list of organized statistics. The \code{tidy_stats} function is automatically
run when \code{add_stats} is used, so there is generally no need to use this
function explicitly. It can be used, however, to peek at how the output of a
specific analysis will be organized.
}
\details{
Please note that not all statistical tests are supported. See 'Details'
below for a list of supported statistical tests.

Currently supported functions:

\code{stats}:
\itemize{
\item \code{t.test()}
\item \code{cor.test()}
\item \code{chisq.test()}
\item \code{wilcox.test()}
\item \code{fisher.test()}
\item \code{oneway.test()}
\item \code{lm()}
\item \code{glm()}
\item \code{aov()}
\item \code{anova()}
}

\code{lme4}/\code{lmerTest}:
\itemize{
\item \code{lmer()}
}

\code{BayesFactor}:
\itemize{
\item \code{generalTestBF()}
\item \code{lmBF()}
\item \code{regressionBF()}
\item \code{ttestBF()}
\item \code{anovaBF()}
\item \code{correlationBF()}
\item \code{contingencyTableBF()}
\item \code{proportionBF()}
\item \code{meta.ttestBF()}
}

\code{tidystats}:
\itemize{
\item \code{describe_data()}
\item \code{count_data()}
}
}
\section{Methods (by class)}{
\itemize{
\item \code{tidy_stats(BFBayesFactor)}: tidy_stats method for class 'BayesFactor'

\item \code{tidy_stats(rcorr)}: tidy_stats method for class 'rcorr'

\item \code{tidy_stats(htest)}: tidy_stats method for class 'htest'

\item \code{tidy_stats(pairwise.htest)}: tidy_stats method for class 'pairwise.htest'

\item \code{tidy_stats(lm)}: tidy_stats method for class 'lm'

\item \code{tidy_stats(glm)}: tidy_stats method for class 'glm'

\item \code{tidy_stats(anova)}: tidy_stats method for class 'anova'

\item \code{tidy_stats(aov)}: tidy_stats method for class 'aov'

\item \code{tidy_stats(aovlist)}: tidy_stats method for class 'aovlist'

\item \code{tidy_stats(confint)}: tidy_stats method for class 'confint'

\item \code{tidy_stats(afex_aov)}: tidy_stats method for class 'afex_aov'

\item \code{tidy_stats(mixed)}: tidy_stats method for class 'afex_aov'

\item \code{tidy_stats(brmsfit)}: tidy_stats method for class 'brmsfit'

\item \code{tidy_stats(effectsize_difference)}: tidy_stats method for class 'effectsize_difference'

\item \code{tidy_stats(effsize)}: tidy_stats method for class 'effsize'

\item \code{tidy_stats(emmGrid)}: tidy_stats method for class 'emmGrid'

\item \code{tidy_stats(summary_emm)}: tidy_stats method for class 'summary_emm'

\item \code{tidy_stats(emm_list)}: tidy_stats method for class 'emm_list'

\item \code{tidy_stats(icclist)}: tidy_stats method for class 'icclist'

\item \code{tidy_stats(lavaan)}: tidy_stats method for class 'lavaan'

\item \code{tidy_stats(lmerMod)}: tidy_stats method for class 'lmerMod'

\item \code{tidy_stats(lmerModLmerTest)}: tidy_stats method for class 'lmerModLmerTest'

\item \code{tidy_stats(predictions)}: tidy_stats method for class 'predictions'

\item \code{tidy_stats(comparisons)}: tidy_stats method for class 'comparisons'

\item \code{tidy_stats(rma.uni)}: tidy_stats method for class 'rma.uni'

\item \code{tidy_stats(rma.mh)}: tidy_stats method for class 'rma.mh'

\item \code{tidy_stats(rma.peto)}: tidy_stats method for class 'rma.peto'

\item \code{tidy_stats(rma.glmm)}: tidy_stats method for class 'rma.glmm'

\item \code{tidy_stats(rma.mv)}: tidy_stats method for class 'rma.mv'

\item \code{tidy_stats(confint.rma)}: tidy_stats method for class 'confint.rma'

\item \code{tidy_stats(list.confint.rma)}: tidy_stats method for class 'list.confint.rma'

\item \code{tidy_stats(anova.rma)}: tidy_stats method for class 'anova.rma'

\item \code{tidy_stats(permutest.rma.uni)}: tidy_stats method for class 'permutest.rma.uni'

\item \code{tidy_stats(tes)}: tidy_stats method for class 'tes'

\item \code{tidy_stats(matreg)}: tidy_stats method for class 'matreg'

\item \code{tidy_stats(ranktest)}: tidy_stats method for class 'ranktest'

\item \code{tidy_stats(regtest)}: tidy_stats method for class 'regtest'

\item \code{tidy_stats(fsn)}: tidy_stats method for class 'fsn'

\item \code{tidy_stats(hc.rma.uni)}: tidy_stats method for class 'hc.rma.uni'

\item \code{tidy_stats(list.rma)}: tidy_stats method for class 'list.rma'

\item \code{tidy_stats(lme)}: tidy_stats method for class 'lme'

\item \code{tidy_stats(nlme)}: tidy_stats method for class 'nlme'

\item \code{tidy_stats(anova.lme)}: tidy_stats method for class 'anova.lme'

\item \code{tidy_stats(gls)}: tidy_stats method for class 'gls'

\item \code{tidy_stats(psych)}: tidy_stats method for class 'psych'

\item \code{tidy_stats(tidystats)}: tidy_stats method for class 'tidystats'

\item \code{tidy_stats(tidystats_descriptives)}: tidy_stats method for class 'tidystats_descriptives'

\item \code{tidy_stats(tidystats_counts)}: tidy_stats method for class 'tidystats_counts'

}}
\examples{
# Conduct statistical tests
# t-test:
sleep_test <- t.test(extra ~ group, data = sleep, paired = TRUE)

# lm:
ctl <- c(4.17, 5.58, 5.18, 6.11, 4.50, 4.61, 5.17, 4.53, 5.33, 5.14)
trt <- c(4.81, 4.17, 4.41, 3.59, 5.87, 3.83, 6.03, 4.89, 4.32, 4.69)
group <- gl(2, 10, 20, labels = c("Ctl", "Trt"))
weight <- c(ctl, trt)
lm_D9 <- lm(weight ~ group)

# ANOVA:
npk_aov <- aov(yield ~ block + N * P * K, npk)

# Tidy the statistics and store each analysis in a separate variable
list_sleep_test <- tidy_stats(sleep_test)
list_lm_D9 <- tidy_stats(lm_D9)
list_npk_aov <- tidy_stats(npk_aov)

# Now you can inspect each of these variables, e.g.,:
names(list_sleep_test)
str(list_sleep_test)

}
\keyword{internal}
